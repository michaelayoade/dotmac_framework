[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-devtools"
version = "1.0.0"
description = "Developer tools and SDK generation for DotMac ISP framework"
authors = [
    {name = "DotMac Framework Team", email = "devtools@dotmac.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["isp", "devtools", "cli", "sdk", "generator", "scaffolding"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    # Core dependencies
    "click>=8.1.0",
    "jinja2>=3.1.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    
    # File and project management
    "cookiecutter>=2.5.0",
    "gitpython>=3.1.0",
    "pathspec>=0.11.0",
    "packaging>=23.0",
    
    # API and documentation generation
    "openapi-spec-validator>=0.6.0",
    "jsonschema>=4.17.0",
    "requests>=2.28.0",
    "httpx>=0.24.0",
    
    # Code generation and parsing
    "black>=23.0.0",
    "isort>=5.12.0",
    "autoflake>=2.0.0",
    "ast-grep-py>=0.5.0",
    
    # Template engines
    "chevron>=0.14.0",
    "markupsafe>=2.1.0",
    
    # Validation and testing
    "jsonschema[format]>=4.17.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "respx>=0.20.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/dotmac/dotmac-devtools"
Documentation = "https://docs.dotmac.com/devtools"
Repository = "https://github.com/dotmac/dotmac-devtools"
Issues = "https://github.com/dotmac/dotmac-devtools/issues"

[project.scripts]
dotmac = "dotmac_devtools.cli:main"
dotmac-generate = "dotmac_devtools.cli:generate_command"
dotmac-scaffold = "dotmac_devtools.cli:scaffold_command"

[tool.setuptools.packages.find]
where = ["."]
include = ["dotmac_devtools*"]

[tool.setuptools.package-data]
dotmac_devtools = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude generated files
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | templates
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

# COMPLEXITY RULES - NO LONGER IGNORED

[tool.ruff.lint]
select = []
ignore = []
[tool.ruff.lint.pylint]
max-args = 8
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"templates/**/*.py" = ["F401", "E402", "UP007"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["dotmac_devtools"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cookiecutter.*",
    "chevron.*",
    "ast_grep_py.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=dotmac_devtools --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["dotmac_devtools"]
omit = [
    "tests/*",
    "dotmac_devtools/templates/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 80

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101"]  # Allow assert in tests
