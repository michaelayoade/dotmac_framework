[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-api-gateway"
version = "1.0.0"
description = "API Gateway plane for DotMac ISP framework - centralized API management, authentication, and rate limiting"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "DotMac Team", email = "support@dotmac.com"}
]
maintainers = [
    {name = "DotMac Team", email = "support@dotmac.com"}
]
keywords = [
    "api-gateway",
    "isp",
    "telecommunications",
    "authentication",
    "rate-limiting", 
    "api-management",
    "proxy",
    "routing",
    "versioning",
    "throttling",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: Proxy Servers",
    "Topic :: System :: Networking",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
]
dependencies = [
    # Core framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "structlog>=23.2.0",
    
    # HTTP client and proxy
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    
    # Authentication and security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    
    # Rate limiting and caching
    "redis>=5.0.0",
    "hiredis>=2.2.0",
    "slowapi>=0.1.9",
    
    # Configuration
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    
    # Monitoring
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    
    # Utilities
    "click>=8.1.0",
    "rich>=13.6.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
]
security = [
    "cryptography>=41.0.0",
    "pyjwt>=2.8.0",
]
monitoring = [
    "opentelemetry-exporter-prometheus>=1.12.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
]
all = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0", 
    "asyncpg>=0.29.0",
    "cryptography>=41.0.0",
    "pyjwt>=2.8.0",
    "opentelemetry-exporter-prometheus>=1.12.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.25.0",
    "respx>=0.20.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.22.0",
]

[project.urls]
Homepage = "https://github.com/dotmac/dotmac-api-gateway"
Documentation = "https://docs.dotmac.com/api-gateway"
Repository = "https://github.com/dotmac/dotmac-api-gateway.git"
"Bug Tracker" = "https://github.com/dotmac/dotmac-api-gateway/issues"

[project.scripts]
dotmac-api-gateway = "dotmac_api_gateway.cli.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["dotmac_api_gateway*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
dotmac_api_gateway = [
    "py.typed",
    "templates/*.html",
    "templates/*.json",
    "static/*",
    "schemas/*.json",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-argument
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q", # flake8-quotes
    "PLE", # pylint errors
    "PLR", # pylint refactor
    "PLW", # pylint warnings
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
            ]

# COMPLEXITY RULES - NO LONGER IGNORED

[tool.ruff.lint]
select = []
ignore = []
[tool.ruff.lint.pylint]
max-args = 8
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252", "C901", "PLR0913", "PLR0915"]

[tool.ruff.lint.isort]
known-first-party = ["dotmac_api_gateway"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dotmac_api_gateway",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["dotmac_api_gateway"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 80

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101"]  # Allow assert in tests
