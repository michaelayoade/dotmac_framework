asyncapi: 3.0.0
info:
  title: DotMac Core Events API
  version: 1.0.0
  description: |
    Event-driven architecture for DotMac platform services.
    
    **Topic Naming Convention:**
    `{domain}.{entity}.{event}.v{version}`
    
    **Domains:**
    - `svc`: Service lifecycle events
    - `prov`: Provisioning events  
    - `ops`: Operations/workflow events
    - `billing`: Billing and payment events
    - `customer`: Customer lifecycle events
    - `system`: System and health events
    
    **Envelope Standard:**
    All events use a standardized envelope with: id, type, schemaVersion, tenantId, occurredAt, traceId, data
    
    **Ordering:**
    Events requiring ordering must include partition keys (serviceId, deviceId, customerId, siteId)

defaultContentType: application/json

channels:
  svc/activation/requested:
    address: svc.activation.requested
    messages:
      serviceActivationRequested:
        $ref: '#/components/messages/ServiceActivationRequested'
    description: Service activation requests from customer management
    
  svc/activation/completed:
    address: svc.activation.completed
    messages:
      serviceActivationCompleted:
        $ref: '#/components/messages/ServiceActivationCompleted'
    description: Successful service activations
    
  svc/activation/failed:
    address: svc.activation.failed
    messages:
      serviceActivationFailed:
        $ref: '#/components/messages/ServiceActivationFailed'
    description: Failed service activation attempts
    
  svc/lifecycle/suspended:
    address: svc.lifecycle.suspended
    messages:
      serviceSuspended:
        $ref: '#/components/messages/ServiceSuspended'
    description: Service suspension events
    
  svc/lifecycle/resumed:
    address: svc.lifecycle.resumed
    messages:
      serviceResumed:
        $ref: '#/components/messages/ServiceResumed'
    description: Service resumption events
    
  svc/lifecycle/terminated:
    address: svc.lifecycle.terminated
    messages:
      serviceTerminated:
        $ref: '#/components/messages/ServiceTerminated'
    description: Service termination events
    
  prov/cpe/started:
    address: prov.cpe.started
    messages:
      cpeProvisioningStarted:
        $ref: '#/components/messages/CpeProvisioningStarted'
    description: CPE provisioning initiation
    
  prov/cpe/provisioned:
    address: prov.cpe.provisioned
    messages:
      cpeProvisioned:
        $ref: '#/components/messages/CpeProvisioned'
    description: Successful CPE provisioning completion
    
  prov/cpe/failed:
    address: prov.cpe.failed
    messages:
      cpeProvisioningFailed:
        $ref: '#/components/messages/CpeProvisioningFailed'
    description: Failed CPE provisioning attempts
    
  ops/workflow/started:
    address: ops.workflow.started
    messages:
      workflowStarted:
        $ref: '#/components/messages/WorkflowStarted'
    description: Workflow execution initiation
    
  ops/workflow/completed:
    address: ops.workflow.completed
    messages:
      workflowCompleted:
        $ref: '#/components/messages/WorkflowCompleted'
    description: Successful workflow completion
    
  ops/workflow/failed:
    address: ops.workflow.failed
    messages:
      workflowFailed:
        $ref: '#/components/messages/WorkflowFailed'
    description: Failed workflow execution
    
  ops/workflow/step_started:
    address: ops.workflow.step_started
    messages:
      workflowStepStarted:
        $ref: '#/components/messages/WorkflowStepStarted'
    description: Individual workflow step initiation
    
  ops/workflow/step_completed:
    address: ops.workflow.step_completed
    messages:
      workflowStepCompleted:
        $ref: '#/components/messages/WorkflowStepCompleted'
    description: Successful workflow step completion
    
  ops/workflow/step_failed:
    address: ops.workflow.step_failed
    messages:
      workflowStepFailed:
        $ref: '#/components/messages/WorkflowStepFailed'
    description: Failed workflow step execution

operations:
  publishServiceActivationRequested:
    action: send
    channel:
      $ref: '#/channels/svc~1activation~1requested'
    summary: Publish service activation request
    description: Triggered when a customer requests service activation
    
  subscribeServiceActivationRequested:
    action: receive
    channel:
      $ref: '#/channels/svc~1activation~1requested'
    summary: Subscribe to service activation requests
    description: Consumed by provisioning and workflow services
    
  publishWorkflowStarted:
    action: send
    channel:
      $ref: '#/channels/ops~1workflow~1started'
    summary: Publish workflow start event
    description: Triggered when a workflow execution begins
    
  subscribeWorkflowStarted:
    action: receive
    channel:
      $ref: '#/channels/ops~1workflow~1started'
    summary: Subscribe to workflow start events
    description: Consumed by monitoring and audit services

components:
  schemas:
    EventEnvelope:
      type: object
      required:
        - id
        - type
        - schema_version
        - tenant_id
        - occurred_at
        - data
      properties:
        id:
          type: string
          format: uuid
          description: Unique event identifier
          example: "550e8400-e29b-41d4-a716-446655440000"
        type:
          type: string
          pattern: '^[a-z]+\.[a-z_]+\.[a-z_]+\.v\d+$'
          description: Event type in format {domain}.{entity}.{event}.v{version}
          example: "svc.activation.requested.v1"
        schema_version:
          type: string
          description: Envelope schema version
          default: "1"
          example: "1"
        tenant_id:
          type: string
          format: uuid
          description: Tenant identifier
          example: "123e4567-e89b-12d3-a456-426614174000"
        occurred_at:
          type: string
          format: date-time
          description: When the event occurred (RFC3339)
          example: "2023-12-07T10:30:00Z"
        trace_id:
          type: string
          description: Distributed tracing identifier
          example: "abc123def456"
        data:
          type: object
          description: Event-specific payload data
        source:
          type: string
          description: Event source service/component
          example: "service-management-api"
        correlation_id:
          type: string
          description: Correlation ID for request tracking
          example: "req_12345"
        causation_id:
          type: string
          description: ID of the event that caused this event
          example: "550e8400-e29b-41d4-a716-446655440001"
        version:
          type: string
          description: Event data version
          example: "1.0"
          
    ServiceActivationRequestedData:
      type: object
      required:
        - service_id
        - customer_id
        - activation_type
      properties:
        service_id:
          type: string
          description: Unique service identifier
          example: "svc_789"
        customer_id:
          type: string
          description: Customer identifier for partition key
          example: "cust_456"
        activation_type:
          type: string
          enum: [immediate, scheduled]
          description: Type of activation
          example: "immediate"
        scheduled_at:
          type: string
          format: date-time
          description: Scheduled activation time (if scheduled)
        parameters:
          type: object
          description: Service-specific activation parameters
          example:
            bandwidth: "100Mbps"
            vlan: 100
            
    ServiceActivationCompletedData:
      type: object
      required:
        - service_id
        - customer_id
        - activated_at
      properties:
        service_id:
          type: string
          description: Unique service identifier
          example: "svc_789"
        customer_id:
          type: string
          description: Customer identifier for partition key
          example: "cust_456"
        activated_at:
          type: string
          format: date-time
          description: When activation completed
          example: "2023-12-07T10:35:00Z"
        configuration:
          type: object
          description: Final service configuration
          
    WorkflowStartedData:
      type: object
      required:
        - workflow_id
        - run_id
        - service_id
      properties:
        workflow_id:
          type: string
          description: Workflow definition identifier
          example: "service-activation-workflow"
        run_id:
          type: string
          format: uuid
          description: Unique workflow run identifier
          example: "run_123e4567-e89b-12d3-a456-426614174000"
        service_id:
          type: string
          description: Service identifier for partition key
          example: "svc_789"
        business_key:
          type: string
          description: Business identifier for idempotency
          example: "activation_svc_789_20231207"
        input_data:
          type: object
          description: Workflow input parameters
          
    WorkflowStepStartedData:
      type: object
      required:
        - workflow_id
        - run_id
        - step_id
        - service_id
      properties:
        workflow_id:
          type: string
          description: Workflow definition identifier
          example: "service-activation-workflow"
        run_id:
          type: string
          format: uuid
          description: Workflow run identifier
          example: "run_123e4567-e89b-12d3-a456-426614174000"
        step_id:
          type: string
          description: Step identifier
          example: "provision-cpe"
        service_id:
          type: string
          description: Service identifier for partition key
          example: "svc_789"
        attempt:
          type: integer
          description: Attempt number (for retries)
          minimum: 1
          example: 1
        step_input:
          type: object
          description: Step input data

  messages:
    ServiceActivationRequested:
      name: ServiceActivationRequested
      title: Service Activation Requested
      summary: A service activation has been requested
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "svc.activation.requested.v1"
              data:
                $ref: '#/components/schemas/ServiceActivationRequestedData'
      examples:
        - name: immediateActivation
          summary: Immediate service activation request
          payload:
            id: "550e8400-e29b-41d4-a716-446655440000"
            type: "svc.activation.requested.v1"
            schema_version: "1"
            tenant_id: "123e4567-e89b-12d3-a456-426614174000"
            occurred_at: "2023-12-07T10:30:00Z"
            trace_id: "abc123def456"
            source: "service-management-api"
            correlation_id: "req_12345"
            data:
              service_id: "svc_789"
              customer_id: "cust_456"
              activation_type: "immediate"
              parameters:
                bandwidth: "100Mbps"
                vlan: 100
                
    ServiceActivationCompleted:
      name: ServiceActivationCompleted
      title: Service Activation Completed
      summary: A service activation has completed successfully
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "svc.activation.completed.v1"
              data:
                $ref: '#/components/schemas/ServiceActivationCompletedData'
                
    ServiceActivationFailed:
      name: ServiceActivationFailed
      title: Service Activation Failed
      summary: A service activation has failed
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "svc.activation.failed.v1"
              data:
                type: object
                required:
                  - service_id
                  - customer_id
                  - error_code
                  - error_message
                properties:
                  service_id:
                    type: string
                  customer_id:
                    type: string
                  error_code:
                    type: string
                  error_message:
                    type: string
                  retry_count:
                    type: integer
                    
    ServiceSuspended:
      name: ServiceSuspended
      title: Service Suspended
      summary: A service has been suspended
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "svc.lifecycle.suspended.v1"
                
    ServiceResumed:
      name: ServiceResumed
      title: Service Resumed
      summary: A service has been resumed
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "svc.lifecycle.resumed.v1"
                
    ServiceTerminated:
      name: ServiceTerminated
      title: Service Terminated
      summary: A service has been terminated
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "svc.lifecycle.terminated.v1"
                
    CpeProvisioningStarted:
      name: CpeProvisioningStarted
      title: CPE Provisioning Started
      summary: CPE provisioning has started
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "prov.cpe.started.v1"
                
    CpeProvisioned:
      name: CpeProvisioned
      title: CPE Provisioned
      summary: CPE has been successfully provisioned
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "prov.cpe.provisioned.v1"
                
    CpeProvisioningFailed:
      name: CpeProvisioningFailed
      title: CPE Provisioning Failed
      summary: CPE provisioning has failed
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "prov.cpe.failed.v1"
                
    WorkflowStarted:
      name: WorkflowStarted
      title: Workflow Started
      summary: A workflow execution has started
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "ops.workflow.started.v1"
              data:
                $ref: '#/components/schemas/WorkflowStartedData'
                
    WorkflowCompleted:
      name: WorkflowCompleted
      title: Workflow Completed
      summary: A workflow execution has completed successfully
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "ops.workflow.completed.v1"
                
    WorkflowFailed:
      name: WorkflowFailed
      title: Workflow Failed
      summary: A workflow execution has failed
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "ops.workflow.failed.v1"
                
    WorkflowStepStarted:
      name: WorkflowStepStarted
      title: Workflow Step Started
      summary: A workflow step has started execution
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "ops.workflow.step_started.v1"
              data:
                $ref: '#/components/schemas/WorkflowStepStartedData'
                
    WorkflowStepCompleted:
      name: WorkflowStepCompleted
      title: Workflow Step Completed
      summary: A workflow step has completed successfully
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "ops.workflow.step_completed.v1"
                
    WorkflowStepFailed:
      name: WorkflowStepFailed
      title: Workflow Step Failed
      summary: A workflow step has failed
      contentType: application/json
      payload:
        allOf:
          - $ref: '#/components/schemas/EventEnvelope'
          - type: object
            properties:
              type:
                const: "ops.workflow.step_failed.v1"
