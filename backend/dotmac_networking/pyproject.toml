[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-networking"
version = "1.0.0"
description = "Minimal, reusable SDKs for ISP networking plane operations"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "DotMac Team", email = "support@dotmac.com"}
]
maintainers = [
    {name = "DotMac Team", email = "support@dotmac.com"}
]
keywords = [
    "networking",
    "isp",
    "telecom",
    "ipam",
    "vlan",
    "radius",
    "device-management",
    "network-automation",
    "monitoring",
    "service-assurance",
    "flow-analytics",
    "provisioning",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Core framework
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "PyYAML>=6.0",
    
    # Networking
    "netaddr>=0.8.0",
    "ipaddress>=1.0.23",
    "dnspython>=2.3.0",
    "scapy>=2.5.0",
    
    # RADIUS and auth
    "pyrad>=2.4",
    "cryptography>=40.0.0",
    
    # Device communication
    "pysnmp>=4.4.12",
    "paramiko>=3.0.0",
    "netmiko>=4.2.0",
    
    # HTTP clients
    "httpx>=0.24.0",
    "requests>=2.31.0",
    
    # Templates
    "jinja2>=3.1.0",
    
    # Monitoring
    "prometheus-client>=0.17.0",
    
    # Utilities
    "click>=8.1.0",
    "rich>=13.0.0",
    "tabulate>=0.9.0",
]

[project.optional-dependencies]
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "asyncpg>=0.28.0",
]
cache = [
    "redis>=4.5.0",
    "hiredis>=2.2.0",
]
mqtt = [
    "asyncio-mqtt>=0.13.0",
]
all = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "asyncpg>=0.28.0",
    "redis>=4.5.0",
    "hiredis>=2.2.0",
    "asyncio-mqtt>=0.13.0",
]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "factory-boy>=3.2.0",
    
    # Code quality
    "ruff>=0.1.6",
    "black>=23.9.0",
    "mypy>=1.6.0",
    
    # Security
    "bandit[toml]>=1.7.5",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
    
    # Pre-commit hooks
    "pre-commit>=3.5.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.8.0",
    "factory-boy>=3.2.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.22.0",
]

[project.urls]
Homepage = "https://github.com/dotmac/dotmac-networking"
Documentation = "https://docs.dotmac.com/networking"
Repository = "https://github.com/dotmac/dotmac-networking.git"
"Bug Tracker" = "https://github.com/dotmac/dotmac-networking/issues"

[project.scripts]
dotmac-networking = "dotmac_networking.cli.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["dotmac_networking*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
dotmac_networking = [
    "py.typed",
    "templates/*.j2",
    "schemas/*.json",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration - ENFORCES COMPLEXITY RULES
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-argument
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q", # flake8-quotes
    "PLE", # pylint errors
    "PLR", # pylint refactor
    "PLW", # pylint warnings
    "C901", # complexity - NOW ENFORCED
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

# COMPLEXITY RULES - NO LONGER IGNORED

[tool.ruff.lint]
select = []
ignore = []
unfixable = ["B"]
[tool.ruff.lint.pylint]
max-args = 8
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252", "C901", "PLR0913", "PLR0915"]

[tool.ruff.lint.isort]
known-first-party = ["dotmac_networking"]

# MyPy configuration - Standardized strict settings
[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = false
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

# Third-party modules without type hints
[[tool.mypy.overrides]]
module = [
    "netaddr.*",
    "scapy.*",
    "pyrad.*",
    "pysnmp.*",
    "netmiko.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

# Pytest configuration - Standardized with coverage enforcement
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dotmac_networking",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "network: Tests requiring network access",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["dotmac_networking"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 80

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "test"]
skips = ["B101"]  # Allow assert in tests