# Global pytest configuration for DotMac Framework
# Centralizes test settings across all packages

[tool:pytest]
minversion = 7.0
testpaths = 
    tests
    dotmac_core_events/tests
    dotmac_core_ops/tests
    dotmac_identity/tests
    dotmac_billing/tests
    dotmac_services/tests
    dotmac_networking/tests
    dotmac_analytics/tests
    dotmac_api_gateway/tests
    dotmac_platform/tests
    dotmac_devtools/tests

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for organizing tests
markers =
    unit: marks tests as unit tests (fast, isolated)
    integration: marks tests as integration tests (slower, multiple components)
    e2e: marks tests as end-to-end tests (slow, full system)
    performance: marks tests as performance and load tests
    security: marks tests as security-related tests
    database: marks tests as database tests
    api: marks tests as API tests
    analytics: marks tests as analytics and metrics tests
    contracts: marks tests as contract testing
    smoke: marks tests as smoke tests
    local: marks tests that can run locally
    staging: marks tests requiring staging environment
    production: marks tests that are production-safe only
    stable: marks tests as stable, reliable tests
    flaky: marks tests as known flaky tests
    slow: marks tests as slow-running tests (deselect with '-m "not slow"')
    external: marks tests requiring external services (database, redis)
    # Legacy markers (deprecated - will be removed)
    contract: DEPRECATED - use 'contracts' instead

# Coverage configuration
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    -ra
    --disable-warnings

# Coverage sources (will be applied to each package)
# Individual packages should set their own --cov=package_name
# in their local test commands

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test output configuration
console_output_style = progress
verbose = 1

# Asyncio configuration
asyncio_mode = auto

# Timeout configuration (prevent hanging tests) 
# Note: Requires pytest-timeout plugin
# timeout = 300
# timeout_method = thread

# Parallel execution (when using pytest-xdist)
# Usage: pytest -n auto
# The number of workers will be auto-detected

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    # FastAPI/Starlette warnings
    ignore:.*starlette.*:DeprecationWarning
    # SQLAlchemy warnings
    ignore:.*sqlalchemy.*:SAWarning
    # Pydantic warnings
    ignore:.*pydantic.*:UserWarning

# Environment variables for tests
env =
    TESTING = true
    ENVIRONMENT = test
    LOG_LEVEL = WARNING
    # Database URLs will be set in conftest.py

# Test collection customization
# Note: collect_ignore is configured in pyproject.toml
# These directories are excluded via norecursedirs above

# Minimum coverage per file (can be overridden per package)
cov_fail_under_per_file = 70

# Test reporting
junit_logging = all
junit_log_passing_tests = true
junit_duration_report = total
junit_suite_name = DotMac Framework Test Suite