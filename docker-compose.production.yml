version: '3.8'

# DotMac Platform - Production Docker Compose
# Optimized for production deployment with high availability, security, and monitoring

services:
  # ===== REVERSE PROXY & SSL TERMINATION =====
  
  nginx-proxy:
    image: nginx:1.25-alpine
    container_name: dotmac-nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl/certs:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - dotmac-network
    depends_on:
      - isp-framework
      - management-platform
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # ===== SHARED INFRASTRUCTURE =====
  
  postgres-shared:
    image: postgres:15-alpine
    container_name: dotmac-postgres-shared
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: "dotmac_isp,mgmt_platform,dotmac_tenants,dotmac_analytics"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_shared_data:/var/lib/postgresql/data
      - ./shared/deployments/scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - dotmac-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d dotmac_isp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
    security_opt:
      - no-new-privileges:true

  redis-shared:
    image: redis:7-alpine
    container_name: dotmac-redis-shared
    restart: unless-stopped
    command: redis-server /etc/redis/redis.conf
    volumes:
      - redis_shared_data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf:ro
      - ./redis/logs:/var/log/redis
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - dotmac-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M
    security_opt:
      - no-new-privileges:true

  # ===== SECRETS MANAGEMENT =====
  
  openbao-shared:
    image: quay.io/openbao/openbao:latest
    container_name: dotmac-openbao-shared
    restart: unless-stopped
    cap_add:
      - IPC_LOCK
    environment:
      BAO_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN}
      BAO_LOG_LEVEL: info
      BAO_STORAGE_FILE_PATH: /openbao/file
    ports:
      - "127.0.0.1:8200:8200"
    volumes:
      - openbao_shared_data:/openbao/file
      - ./openbao/config:/openbao/config:ro
      - ./openbao/logs:/openbao/logs
    command: server -config=/openbao/config/openbao.hcl
    networks:
      - dotmac-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8200/v1/sys/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    security_opt:
      - no-new-privileges:true

  # ===== OBSERVABILITY STACK =====
  
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: dotmac-clickhouse
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: signoz_metrics
      CLICKHOUSE_USER: signoz
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml:ro
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml:ro
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:8123:8123"
    networks:
      - dotmac-network
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    security_opt:
      - no-new-privileges:true

  signoz-collector:
    image: signoz/signoz-otel-collector:0.88.11
    container_name: dotmac-signoz-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./signoz/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ports:
      - "127.0.0.1:4317:4317"
      - "127.0.0.1:4318:4318"
      - "127.0.0.1:8889:8889"
    networks:
      - dotmac-network
    depends_on:
      - clickhouse
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 256M
    security_opt:
      - no-new-privileges:true

  signoz-query:
    image: signoz/query-service:0.40.0
    container_name: dotmac-signoz-query
    restart: unless-stopped
    environment:
      ClickHouseUrl: tcp://clickhouse:9000
      CLICKHOUSE_USER: signoz
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      STORAGE: clickhouse
      TELEMETRY_ENABLED: "false"
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - dotmac-network
    depends_on:
      - clickhouse
      - signoz-collector
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 256M
    security_opt:
      - no-new-privileges:true

  signoz-frontend:
    image: signoz/frontend:0.40.0
    container_name: dotmac-signoz-frontend
    restart: unless-stopped
    environment:
      QUERY_SERVICE_URL: http://signoz-query:8080
    ports:
      - "127.0.0.1:3301:3301"
    networks:
      - dotmac-network
    depends_on:
      - signoz-query
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    security_opt:
      - no-new-privileges:true

  # ===== ISP FRAMEWORK =====
  
  isp-framework:
    build:
      context: ./isp-framework
      dockerfile: Dockerfile.production
    image: dotmac/isp-framework:${VERSION:-latest}
    container_name: dotmac-isp-framework
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/dotmac_isp?sslmode=require
      ASYNC_DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/dotmac_isp?sslmode=require
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/1
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/2
      # OpenBao
      OPENBAO_URL: http://openbao-shared:8200
      OPENBAO_TOKEN: ${VAULT_TOKEN}
      # SignOz
      SIGNOZ_ENDPOINT: signoz-collector:4317
      # Application
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      DEBUG: "false"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      # Security
      CORS_ORIGINS: ${CORS_ORIGINS}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      SSL_ENABLED: "true"
      # MinIO
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_SECURE: "true"
    volumes:
      - isp_uploads:/app/uploads
      - isp_logs:/app/logs
      - ./ssl/certs:/app/ssl:ro
    ports:
      - "127.0.0.1:8001:8000"
    networks:
      - dotmac-network
    depends_on:
      - postgres-shared
      - redis-shared
      - openbao-shared
      - signoz-collector
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    security_opt:
      - no-new-privileges:true

  isp-worker:
    build:
      context: ./isp-framework
      dockerfile: Dockerfile.production
    image: dotmac/isp-framework:${VERSION:-latest}
    container_name: dotmac-isp-worker
    restart: unless-stopped
    command: ["python", "-m", "celery", "-A", "dotmac_isp.core.celery_app", "worker", "--loglevel=info", "--concurrency=4"]
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/dotmac_isp?sslmode=require
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/1
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/1
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/2
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    volumes:
      - isp_logs:/app/logs
    networks:
      - dotmac-network
    depends_on:
      - postgres-shared
      - redis-shared
      - isp-framework
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    security_opt:
      - no-new-privileges:true

  # ===== MANAGEMENT PLATFORM =====
  
  management-platform:
    build:
      context: ./management-platform
      dockerfile: Dockerfile.production
    image: dotmac/management-platform:${VERSION:-latest}
    container_name: dotmac-management-platform
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/mgmt_platform?sslmode=require
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/3
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/4
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/5
      # OpenBao
      OPENBAO_URL: http://openbao-shared:8200
      OPENBAO_TOKEN: ${VAULT_TOKEN}
      # SignOz
      SIGNOZ_ENDPOINT: signoz-collector:4317
      SIGNOZ_ACCESS_TOKEN: ${SIGNOZ_ACCESS_TOKEN:-}
      # Application
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      SECRET_KEY: ${MGMT_SECRET_KEY}
      JWT_SECRET_KEY: ${MGMT_JWT_SECRET_KEY}
      # External services
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      # CORS origins
      CORS_ORIGINS: ${CORS_ORIGINS}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      # ISP Framework Integration
      ISP_FRAMEWORK_URL: http://isp-framework:8000
    volumes:
      - mgmt_uploads:/app/uploads
      - mgmt_logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      - dotmac-network
    depends_on:
      - postgres-shared
      - redis-shared
      - openbao-shared
      - signoz-collector
      - isp-framework
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    security_opt:
      - no-new-privileges:true

  mgmt-celery-worker:
    build:
      context: ./management-platform
      dockerfile: Dockerfile.production
    image: dotmac/management-platform:${VERSION:-latest}
    container_name: dotmac-mgmt-celery-worker
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/mgmt_platform?sslmode=require
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/3
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/4
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/5
      OPENBAO_URL: http://openbao-shared:8200
      OPENBAO_TOKEN: ${VAULT_TOKEN}
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      SECRET_KEY: ${MGMT_SECRET_KEY}
    volumes:
      - mgmt_logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - dotmac-network
    depends_on:
      - postgres-shared
      - redis-shared
      - management-platform
    command: celery -A app.workers.celery_app worker --loglevel=info --concurrency=4
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    security_opt:
      - no-new-privileges:true

  mgmt-celery-beat:
    build:
      context: ./management-platform
      dockerfile: Dockerfile.production
    image: dotmac/management-platform:${VERSION:-latest}
    container_name: dotmac-mgmt-celery-beat
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/mgmt_platform?sslmode=require
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/3
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/4
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/5
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      SECRET_KEY: ${MGMT_SECRET_KEY}
    volumes:
      - mgmt_logs:/app/logs
    networks:
      - dotmac-network
    depends_on:
      - postgres-shared
      - redis-shared
    command: celery -A app.workers.celery_app beat --loglevel=info
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_shared_data:
    name: dotmac-postgres-shared-data-prod
  redis_shared_data:
    name: dotmac-redis-shared-data-prod
  openbao_shared_data:
    name: dotmac-openbao-shared-data-prod
  clickhouse_data:
    name: dotmac-clickhouse-data-prod
  isp_uploads:
    name: dotmac-isp-uploads-prod
  isp_logs:
    name: dotmac-isp-logs-prod
  mgmt_uploads:
    name: dotmac-mgmt-uploads-prod
  mgmt_logs:
    name: dotmac-mgmt-logs-prod

networks:
  dotmac-network:
    driver: bridge
    name: dotmac-network-prod
    ipam:
      config:
        - subnet: 172.20.0.0/16