[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-shared-ipam"
version = "1.0.0"
description = "Enhanced IPAM (IP Address Management) system with performance optimizations and advanced features"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DotMac Framework", email = "dev@dotmac.framework"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"

# Core dependencies
dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

# Optional dependencies for different features
[project.optional-dependencies]
database = [
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",  # PostgreSQL adapter
    "alembic>=1.8.0",          # Database migrations
]

redis = [
    "redis>=4.5.0",
]

celery = [
    "celery>=5.2.0",
    "redis>=4.5.0",            # Celery broker/backend
]

fastapi = [
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]

django = [
    "django>=4.0.0",
    "djangorestframework>=3.14.0",
]

# Full feature set
full = [
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "alembic>=1.8.0",
    "redis>=4.5.0",
    "celery>=5.2.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "factory-boy>=3.2.0",      # Test data factories
    "faker>=18.0.0",           # Generate test data
]

[project.urls]
Homepage = "https://github.com/dotmac-framework/dotmac-framework"
Documentation = "https://docs.dotmac-framework.dev/ipam"
Repository = "https://github.com/dotmac-framework/dotmac-framework"
Issues = "https://github.com/dotmac-framework/dotmac-framework/issues"

[project.scripts]
ipam-cli = "dotmac_shared.ipam.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["dotmac_shared.ipam*"]

[tool.setuptools.package-data]
"dotmac_shared.ipam" = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "celery.*",
    "sqlalchemy.*",
    "alembic.*",
    "psycopg2.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dotmac_shared.ipam",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "redis: marks tests that require Redis",
    "database: marks tests that require database",
]

# Coverage configuration
[tool.coverage.run]
source = ["dotmac_shared/ipam"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/config_example.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if not SQLALCHEMY_AVAILABLE:",
    "if not REDIS_AVAILABLE:",
    "if not CELERY_AVAILABLE:",
]

# Flake8 configuration
[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".tox",
    "migrations",
]

# Performance profiling
[tool.py-spy]
duration = 30
rate = 100
output = "profile.svg"
