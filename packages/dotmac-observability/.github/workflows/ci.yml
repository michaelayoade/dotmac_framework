name: CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/dotmac-observability/**'
      - '.github/workflows/observability-ci.yml'
  pull_request:
    branches: [main, develop] 
    paths:
      - 'packages/dotmac-observability/**'
      - '.github/workflows/observability-ci.yml'

env:
  PYTHON_VERSION: '3.12'

defaults:
  run:
    working-directory: packages/dotmac-observability

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Run black format check
        run: black --check src tests
      
      - name: Run ruff linting
        run: ruff check src tests
      
      - name: Run mypy type checking
        run: mypy src

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        extras: ['base', 'otel', 'prometheus', 'otel,prometheus', 'all']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov
      
      - name: Install package with extras
        run: |
          if [ "${{ matrix.extras }}" = "base" ]; then
            pip install -e .
          else
            pip install -e ".[${{ matrix.extras }}]"
          fi
      
      - name: Run tests
        run: |
          if [ "${{ matrix.extras }}" = "base" ]; then
            pytest tests/ -v --cov=src --cov-report=xml --cov-report=term
          elif [ "${{ matrix.extras }}" = "otel" ]; then
            pytest tests/ -v -m "not prometheus and not dashboards" --cov=src --cov-report=xml
          elif [ "${{ matrix.extras }}" = "prometheus" ]; then
            pytest tests/ -v -m "not otel and not dashboards" --cov=src --cov-report=xml  
          elif [ "${{ matrix.extras }}" = "otel,prometheus" ]; then
            pytest tests/ -v -m "not dashboards" --cov=src --cov-report=xml
          else
            pytest tests/ -v --cov=src --cov-report=xml
          fi
      
      - name: Upload coverage to Codecov
        if: matrix.python-version == env.PYTHON_VERSION && matrix.extras == 'all'
        uses: codecov/codecov-action@v4
        with:
          file: packages/dotmac-observability/coverage.xml
          flags: observability
          name: observability-coverage

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install package with all extras
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[all]"
      
      - name: Run integration tests
        run: pytest tests/ -v -m integration --cov=src --cov-report=xml
      
      - name: Test package import
        run: python -c "import dotmac.observability; print('✅ Package imports successfully')"
      
      - name: Test basic functionality
        run: |
          python -c "
          from dotmac.observability import create_default_config, initialize_otel, initialize_metrics_registry
          
          config = create_default_config('test', 'development')
          otel = initialize_otel(config)
          metrics = initialize_metrics_registry('test', enable_prometheus=False)
          
          print('✅ Basic functionality works')
          print(f'✅ OTEL initialized: {otel.is_initialized}')
          print(f'✅ Metrics registry: {len(metrics.list_metrics())} default metrics')
          "

  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: observability-package
          path: packages/dotmac-observability/dist/
          retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[all]"
          pip install bandit safety
      
      - name: Run bandit security check
        run: bandit -r src/
      
      - name: Run safety check
        run: safety check

  docs:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check README
        run: |
          if [ ! -f README.md ]; then
            echo "❌ README.md not found"
            exit 1
          fi
          echo "✅ README.md found"
      
      - name: Check CHANGELOG
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "❌ CHANGELOG.md not found"
            exit 1
          fi
          echo "✅ CHANGELOG.md found"
      
      - name: Validate package metadata
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          python -c "
          import dotmac.observability
          print(f'✅ Package version: {getattr(dotmac.observability, \"__version__\", \"unknown\")}')
          print(f'✅ Package name: {getattr(dotmac.observability, \"__package_name__\", \"unknown\")}')
          "