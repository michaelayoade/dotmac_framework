[build-system]
requires = ["poetry-core"]

build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dotmac-plugins"
version = "1.0.0"
description = "Universal plugin system for Python applications"
authors = ["DotMac Framework Team <dev@dotmac.com>"]

readme = "README.md"
license = "MIT"
homepage = "https://github.com/dotmac-framework/dotmac-plugins"
repository = "https://github.com/dotmac-framework/dotmac-plugins.git"
documentation = "https://docs.dotmac.com/plugins"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing"
]

# Ensure src layout packaging
packages = [
    { include = "dotmac_plugins", from = "src" },
    { include = "dotmac", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.9"
pyyaml = ">=6.0"
aiohttp = ">=3.8.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.0.0"
black = ">=23.0.0"

[tool.pytest]
[tool.pytest.ini_options]
testpaths = ["tests"]

python_files = ["test_*.py", "*_test.py"]

python_functions = ["test_*"]

asyncio_mode = "auto"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=dotmac_plugins",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage]
[tool.coverage.run]
source = ["src/dotmac_plugins"]

omit = ["*/tests/*", "*/test_*", "*/examples/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == \"__main__\":",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]

include = "\\.pyi?$"
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]

python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]

exclude = [".git", "__pycache__", "build", "dist", ".eggs", "*.egg-info", ".venv", "venv"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
