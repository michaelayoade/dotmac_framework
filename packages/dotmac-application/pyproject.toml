[build-system]
requires = ["poetry-core"]

build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dotmac-application"
version = "1.0.0"
description = "Application factory and lifecycle for DotMac platform"
authors = ["DotMac Team <dev@dotmac.com>"]

readme = "README.md"
license = "MIT"
homepage = "https://github.com/dotmac-framework/dotmac-application"
repository = "https://github.com/dotmac-framework/dotmac-application.git"
documentation = "https://docs.dotmac.com/application"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]

packages = [
    { include = "dotmac", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = ">=0.110.0"
starlette = ">=0.36.0"
pydantic = ">=2.5.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.0.0"
black = ">=23.0.0"

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]

extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 100

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP"]
ignore = ["E501", "B008", "C901"]

[tool.ruff.lint.per-file-ignores]
__init__.py = ["F401"]
"tests/**/*" = ["E501"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest]
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]

asyncio_mode = "auto"
filterwarnings = ["error", "ignore::UserWarning", "ignore::DeprecationWarning"]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage]
[tool.coverage.run]
source = ["src"]

branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == \"__main__\":",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
