[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-core"
version = "1.0.0"
description = "Core foundation package for DotMac Framework - database, tenant, and core utilities"
authors = [
    {name = "DotMac Team", email = "team@dotmac.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
]
dependencies = [
    "sqlalchemy>=2.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "structlog>=23.0.0",
]

[project.optional-dependencies]
fastapi = [
    "fastapi>=0.110.0",
    "starlette>=0.36.0"
]
redis = [
    "redis>=5.0.0"
]
postgres = [
    "psycopg[binary]>=3.1.0",
    "asyncpg>=0.29.0"
]
cache = [
    "redis>=5.0.0",
    "aiocache>=0.12.0"
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "ruff>=0.1.0",
    "aiosqlite>=0.19.0",
]
all = [
    "dotmac-core[fastapi,redis,postgres,cache]"
]

[project.urls]
Homepage = "https://dotmac.com"
Repository = "https://github.com/dotmac-framework/dotmac-core"
Documentation = "https://docs.dotmac.com/core"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"dotmac.core" = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["dotmac"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dotmac.core",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "database: Database tests (require database server)",
    "redis: Redis tests (require Redis server)",
    "slow: Slow running tests"
]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "TCH", # flake8-type-checking
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["N803", "N806"]