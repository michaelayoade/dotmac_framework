[build-system]
requires = ["poetry-core"]

build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dotmac-core"
version = "1.0.0"
description = "Core foundation package for DotMac Framework - database, tenant, and core utilities"
authors = ["DotMac Team <team@dotmac.com>"]

readme = "README.md"
license = "MIT"
homepage = "https://dotmac.com"
repository = "https://github.com/dotmac-framework/dotmac-core"
documentation = "https://docs.dotmac.com/core"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration"
]

packages = [
    { include = "dotmac", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.9"
sqlalchemy = ">=2.0.0"
pydantic = ">=2.5.0"
pydantic-settings = ">=2.1.0"
asyncpg = ">=0.29.0"
aiocache = {version = ">=0.12.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.12.0"
safety = ">=2.3.0"
pip-audit = ">=2.6.0"
mkdocs = ">=1.5.0"
mkdocs-material = ">=9.4.0"
mkdocstrings = {version = ">=0.23.0", extras = ["python"]}
pre-commit = ">=3.5.0"
tox = ">=4.11.0"
build = ">=1.0.0"
twine = ">=4.0.0"

[tool.black]

line-length = "100"
target-version = ["py39", "py310", "py311", "py312"]

include = "\\.pyi?$"
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]

profile = "black"
multi_line_output = "3"
line_length = "100"
known_first_party = ["dotmac"]

skip_glob = ["*.pyi"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest]
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]

python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/dotmac/core",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-v",
    "--tb=short"
]

markers = ["unit: Unit tests", "integration: Integration tests", "database: Database tests (require database server)", "redis: Redis tests (require Redis server)", "slow: Slow running tests", "security: Security-related tests"]

asyncio_mode = "auto"
filterwarnings = ["ignore::DeprecationWarning", "ignore::PendingDeprecationWarning"]

[tool.ruff]
line-length = "100"
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP", "N", "TCH", "RUF", "S", "A", "COM", "DTZ", "EM", "G", "PIE", "T20", "SIM", "TID"]

ignore = ["E501", "B008", "C901", "S101", "S603", "S607", "COM812"]

[tool.ruff.lint.per-file-ignores]
__init__.py = ["F401", "F403"]
"tests/*" = ["N803", "N806", "S101", "S105", "S106"]
"src/dotmac/core/validation.py" = ["EM102"]

[tool.ruff.lint.isort]
known-first-party = ["dotmac"]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]

skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.coverage]
[tool.coverage.run]
source = ["src"]

omit = ["*/tests/*", "*/test_*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

show_missing = true

[tool.coverage.html]
directory = "htmlcov"
[tool.coverage.xml]
output = "coverage.xml"
