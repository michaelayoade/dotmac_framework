[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-events"
version = "1.0.0"
description = "Transport-agnostic event bus package for the DotMac Framework"
authors = [
    {name = "DotMac Team", email = "team@dotmac.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["events", "message-bus", "pubsub", "kafka", "redis", "asyncio"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Framework :: AsyncIO",
]

dependencies = [
    "typing_extensions>=4.5.0",
    "anyio>=4.0.0",
]

[project.optional-dependencies]
redis = [
    "redis[hiredis]>=5.0.0",
]
kafka = [
    "aiokafka>=0.10.0",
]
avro = [
    "fastavro>=1.9.4",
]
otel = [
    "opentelemetry-api>=1.25.0",
    "opentelemetry-sdk>=1.25.0",
]
all = [
    "redis[hiredis]>=5.0.0",
    "aiokafka>=0.10.0", 
    "fastavro>=1.9.4",
    "opentelemetry-api>=1.25.0",
    "opentelemetry-sdk>=1.25.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/dotmac-framework/dotmac-events"
Documentation = "https://docs.dotmac.com/events"
Repository = "https://github.com/dotmac-framework/dotmac-events"
Changelog = "https://github.com/dotmac-framework/dotmac-events/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"dotmac.events" = ["py.typed"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/dotmac/events",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
asyncio_mode = "auto"
markers = [
    "redis: tests requiring Redis server",
    "kafka: tests requiring Kafka server", 
    "integration: integration tests",
    "slow: slow tests",
]

[tool.coverage.run]
source = ["src/dotmac/events"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "aiokafka.*",
    "fastavro.*",
]
ignore_missing_imports = true