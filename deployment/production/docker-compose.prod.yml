# Production Docker Compose for DotMac Framework
version: '3.8'

services:
  # ===== SHARED INFRASTRUCTURE =====
  
  # Production PostgreSQL with optimized settings
  postgres-shared:
    image: postgres:15-alpine
    container_name: dotmac-postgres-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: "dotmac_isp,mgmt_platform,dotmac_tenants,dotmac_analytics"
      # Production PostgreSQL settings
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./shared/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./shared/scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - dotmac-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d dotmac_isp"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production Redis with persistence and clustering
  redis-shared:
    image: redis:7-alpine
    container_name: dotmac-redis-prod
    command: >
      redis-server 
      --appendonly yes 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
      - ./shared/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - dotmac-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production OpenBao with proper secrets management
  openbao-shared:
    image: quay.io/openbao/openbao:latest
    container_name: dotmac-openbao-prod
    cap_add:
      - IPC_LOCK
    environment:
      BAO_CONFIG_PATH: /openbao/config
      BAO_LOG_LEVEL: warn
    volumes:
      - openbao_data:/openbao/data
      - ./shared/openbao/config.hcl:/openbao/config/config.hcl:ro
      - ./shared/openbao/certs:/openbao/certs:ro
    ports:
      - "${OPENBAO_PORT:-8200}:8200"
    networks:
      - dotmac-network
    restart: always
    command: server -config=/openbao/config/config.hcl
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "bao", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ===== ISP FRAMEWORK =====
  
  isp-framework:
    build:
      context: ../../isp-framework
      dockerfile: Dockerfile
      target: production
    image: dotmac-isp:${APP_VERSION:-latest}
    container_name: dotmac-isp-prod
    environment:
      # Core settings
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      DEBUG: "false"
      
      # Database
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/dotmac_isp
      DATABASE_POOL_SIZE: 20
      DATABASE_MAX_OVERFLOW: 30
      
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/0
      
      # Celery
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/1
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/2
      
      # Security
      SECRET_KEY: ${ISP_SECRET_KEY}
      JWT_SECRET_KEY: ${ISP_JWT_SECRET_KEY}
      
      # OpenBao
      VAULT_URL: http://openbao-shared:8200
      VAULT_TOKEN: ${VAULT_TOKEN}
      
      # Observability
      SIGNOZ_ENDPOINT: signoz-collector:4317
      PROMETHEUS_MULTIPROC_DIR: /tmp/prometheus_multiproc_dir
      
      # Performance
      WORKERS: 4
      MAX_CONNECTIONS: 1000
      KEEPALIVE_TIMEOUT: 5
    volumes:
      - isp_logs:/app/logs
      - isp_uploads:/app/uploads
      - prometheus_multiproc:/tmp/prometheus_multiproc_dir
    ports:
      - "${ISP_PORT:-8001}:8000"
    networks:
      - dotmac-network
    restart: always
    depends_on:
      postgres-shared:
        condition: service_healthy
      redis-shared:
        condition: service_healthy
      openbao-shared:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # ===== MANAGEMENT PLATFORM =====
  
  management-platform:
    build:
      context: ../../management-platform
      dockerfile: Dockerfile
      target: production
    image: dotmac-mgmt:${APP_VERSION:-latest}
    container_name: dotmac-mgmt-prod
    environment:
      # Core settings
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      DEBUG: "false"
      
      # Database
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/mgmt_platform
      
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/3
      
      # Celery
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/4
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/5
      
      # Security
      SECRET_KEY: ${MGMT_SECRET_KEY}
      JWT_SECRET_KEY: ${MGMT_JWT_SECRET_KEY}
      
      # External services
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      
      # CORS
      CORS_ORIGINS: ${CORS_ORIGINS}
      
      # ISP Integration
      ISP_FRAMEWORK_URL: http://isp-framework:8000
      
      # Performance
      WORKERS: 4
    volumes:
      - mgmt_logs:/app/logs
      - mgmt_uploads:/app/uploads
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "${MGMT_PORT:-8000}:8000"
    networks:
      - dotmac-network
    restart: always
    depends_on:
      postgres-shared:
        condition: service_healthy
      redis-shared:
        condition: service_healthy
      isp-framework:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # ===== BACKGROUND WORKERS =====
  
  # Management Platform Celery Worker
  mgmt-celery-worker:
    build:
      context: ../../management-platform
      dockerfile: Dockerfile
      target: production
    image: dotmac-mgmt:${APP_VERSION:-latest}
    container_name: dotmac-mgmt-worker-prod
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/mgmt_platform
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/3
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/4
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/5
      ENVIRONMENT: production
      LOG_LEVEL: INFO
    volumes:
      - mgmt_logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dotmac-network
    restart: always
    depends_on:
      postgres-shared:
        condition: service_healthy
      redis-shared:
        condition: service_healthy
    command: celery -A app.workers.celery_app worker --loglevel=info --concurrency=4
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "3"

  # Management Platform Celery Beat
  mgmt-celery-beat:
    build:
      context: ../../management-platform
      dockerfile: Dockerfile
      target: production
    image: dotmac-mgmt:${APP_VERSION:-latest}
    container_name: dotmac-mgmt-beat-prod
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-shared:5432/mgmt_platform
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/3
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD}@redis-shared:6379/4
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD}@redis-shared:6379/5
      ENVIRONMENT: production
      LOG_LEVEL: INFO
    volumes:
      - mgmt_logs:/app/logs
    networks:
      - dotmac-network
    restart: always
    depends_on:
      postgres-shared:
        condition: service_healthy
      redis-shared:
        condition: service_healthy
    command: celery -A app.workers.celery_app beat --loglevel=info
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

  # ===== REVERSE PROXY & LOAD BALANCER =====
  
  nginx:
    image: nginx:alpine
    container_name: dotmac-nginx-prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - dotmac-network
    restart: always
    depends_on:
      - isp-framework
      - management-platform
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "5"

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/data/redis
  openbao_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/data/openbao
  isp_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/logs/isp
  isp_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/data/isp/uploads
  mgmt_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/logs/mgmt
  mgmt_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/data/mgmt/uploads
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/dotmac/logs/nginx
  prometheus_multiproc:
    driver: tmpfs

networks:
  dotmac-network:
    driver: bridge
    name: dotmac-network-prod
    ipam:
      config:
        - subnet: 172.20.0.0/16