FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    supervisor \
    netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy all service directories
COPY dotmac_api_gateway /app/dotmac_api_gateway
COPY dotmac_identity /app/dotmac_identity
COPY dotmac_billing /app/dotmac_billing
COPY dotmac_services /app/dotmac_services
COPY dotmac_networking /app/dotmac_networking
COPY dotmac_analytics /app/dotmac_analytics
COPY dotmac_platform /app/dotmac_platform
COPY dotmac_core_events /app/dotmac_core_events
COPY dotmac_core_ops /app/dotmac_core_ops
COPY backend /app/backend

# Install Python dependencies for all services
RUN pip install --no-cache-dir \
    fastapi \
    uvicorn[standard] \
    httpx \
    pydantic \
    sqlalchemy \
    alembic \
    asyncpg \
    redis \
    python-jose[cryptography] \
    passlib[bcrypt] \
    python-multipart \
    emails \
    celery \
    prometheus-client \
    opentelemetry-api \
    opentelemetry-sdk \
    opentelemetry-instrumentation-fastapi \
    pyyaml \
    rich \
    click \
    tenacity \
    aiofiles \
    python-json-logger

# Create supervisor configuration
RUN mkdir -p /etc/supervisor/conf.d /var/log/supervisor

# Create supervisor configuration for all services
COPY <<EOF /etc/supervisor/conf.d/services.conf
[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

[program:unified-api]
command=python /app/backend/unified_api_service.py
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/unified-api.err.log
stdout_logfile=/var/log/supervisor/unified-api.out.log
environment=PYTHONPATH="/app"

[program:identity]
command=python -m uvicorn dotmac_identity.main:app --host 0.0.0.0 --port 8001
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/identity.err.log
stdout_logfile=/var/log/supervisor/identity.out.log
environment=PYTHONPATH="/app"

[program:billing]
command=python -m uvicorn dotmac_billing.main:app --host 0.0.0.0 --port 8002
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/billing.err.log
stdout_logfile=/var/log/supervisor/billing.out.log
environment=PYTHONPATH="/app"

[program:services]
command=python -m uvicorn dotmac_services.main:app --host 0.0.0.0 --port 8003
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/services.err.log
stdout_logfile=/var/log/supervisor/services.out.log
environment=PYTHONPATH="/app"

[program:networking]
command=python -m uvicorn dotmac_networking.main:app --host 0.0.0.0 --port 8004
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/networking.err.log
stdout_logfile=/var/log/supervisor/networking.out.log
environment=PYTHONPATH="/app"

[program:analytics]
command=python -m uvicorn dotmac_analytics.main:app --host 0.0.0.0 --port 8005
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/analytics.err.log
stdout_logfile=/var/log/supervisor/analytics.out.log
environment=PYTHONPATH="/app"

[program:platform]
command=python -m uvicorn dotmac_platform.app:app --host 0.0.0.0 --port 8006
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/platform.err.log
stdout_logfile=/var/log/supervisor/platform.out.log
environment=PYTHONPATH="/app"

[program:events]
command=python -m uvicorn dotmac_core_events.api.rest:app --host 0.0.0.0 --port 8007
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/events.err.log
stdout_logfile=/var/log/supervisor/events.out.log
environment=PYTHONPATH="/app"

[program:ops]
command=python -m uvicorn dotmac_core_ops.main:app --host 0.0.0.0 --port 8008
directory=/app
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/ops.err.log
stdout_logfile=/var/log/supervisor/ops.out.log
environment=PYTHONPATH="/app"
EOF

# Create startup script
COPY <<'EOF' /app/start.sh
#!/bin/bash
echo "Starting DotMac Unified Platform..."

# Wait for PostgreSQL
echo "Waiting for PostgreSQL..."
while ! nc -z postgres 5432; do
  sleep 1
done
echo "PostgreSQL is ready!"

# Wait for Redis
echo "Waiting for Redis..."
while ! nc -z redis 6379; do
  sleep 1
done
echo "Redis is ready!"

# Start all services with supervisor
echo "Starting all services..."
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/services.conf
EOF

RUN chmod +x /app/start.sh

# Expose all service ports
EXPOSE 8000 8001 8002 8003 8004 8005 8006 8007 8008

# Start services
CMD ["/app/start.sh"]