version: '3.8'

services:
  # ===== CORE DATABASE & CACHE =====
  
  # PostgreSQL Database - Pinned to specific version for stability
  postgres:
    image: postgres:15.8-alpine
    container_name: dotmac_isp_postgres
    environment:
      POSTGRES_DB: dotmac_isp
      POSTGRES_USER: dotmac
      POSTGRES_PASSWORD: dotmac
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dotmac -d dotmac_isp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dotmac_network

  # Redis Cache & Event Bus - Pinned to specific version for stability
  redis:
    image: redis:7.4-alpine
    container_name: dotmac_isp_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - dotmac_network


  # ===== FILE STORAGE (MinIO S3) =====
  
  # MinIO S3-compatible storage - Pinned to specific version for stability
  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    container_name: dotmac_minio
    ports:
      - "9002:9000"      # API (avoid ClickHouse port 9000)
      - "9003:9001"      # Console
    environment:
      - MINIO_ROOT_USER=dotmacadmin
      - MINIO_ROOT_PASSWORD=dotmacpassword
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - dotmac_network

  # ===== SECRETS MANAGEMENT (OpenBao) =====
  
  openbao:
    image: openbao/openbao:2.3.2
    container_name: dotmac_openbao
    ports:
      - "8200:8200"
    environment:
      - OPENBAO_DEV_ROOT_TOKEN_ID=dev-token
      - OPENBAO_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - OPENBAO_ADDR=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: ["server", "-config=/openbao/config/openbao.hcl"]
    volumes:
      - openbao_data:/openbao/data
      - ./config/openbao:/openbao/config
    networks:
      - dotmac_network

  # ===== RADIUS SERVER =====
  
  # FreeRADIUS Authentication Server - Pinned to specific version for stability
  freeradius:
    image: freeradius/freeradius-server:3.2.5
    container_name: dotmac_freeradius
    ports:
      - "1812:1812/udp"  # Authentication
      - "1813:1813/udp"  # Accounting
    volumes:
      - ./config/freeradius:/etc/raddb
      - freeradius_data:/var/log/radius
    environment:
      - RADIUS_SECRET=testing123
      - DB_HOST=postgres
      - DB_NAME=dotmac_isp
      - DB_USER=dotmac
      - DB_PASS=dotmac
    depends_on:
      - postgres
    networks:
      - dotmac_network

  # ===== NETWORK MANAGEMENT =====
  
  # SNMP Simulator for testing - Pinned to specific version for stability  
  snmpsim:
    image: tandrup/snmpsim:4.0.18
    container_name: dotmac_snmpsim
    ports:
      - "1161:161/udp"
    volumes:
      - ./config/snmp:/usr/share/snmpsim/data
    networks:
      - dotmac_network

  # DotMac ISP Framework Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dotmac_isp_app
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac@postgres:5432/dotmac_isp
      - ASYNC_DATABASE_URL=postgresql+asyncpg://dotmac:dotmac@postgres:5432/dotmac_isp
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=false
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - dotmac_network

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dotmac_isp_celery_worker
    command: celery -A dotmac_isp.core.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac@postgres:5432/dotmac_isp
      - ASYNC_DATABASE_URL=postgresql+asyncpg://dotmac:dotmac@postgres:5432/dotmac_isp
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - dotmac_network

  # Celery Beat Scheduler
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dotmac_isp_celery_beat
    command: celery -A dotmac_isp.core.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac@postgres:5432/dotmac_isp
      - ASYNC_DATABASE_URL=postgresql+asyncpg://dotmac:dotmac@postgres:5432/dotmac_isp
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - JWT_SECRET_KEY=dev-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - dotmac_network

  # Nginx Reverse Proxy - Pinned to specific version for stability  
  nginx:
    image: nginx:1.27-alpine
    container_name: dotmac_isp_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployments/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployments/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./static:/var/www/static
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - dotmac_network

volumes:
  postgres_data:
  redis_data:
  openbao_data:
  freeradius_data:
  minio_data:

networks:
  dotmac_network:
    driver: bridge