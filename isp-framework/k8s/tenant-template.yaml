# Template for deploying tenant-specific ISP Framework instances
# This template is processed by the Management Platform to create tenant deployments

apiVersion: v1
kind: Namespace
metadata:
  name: dotmac-tenant-{{TENANT_ID}}
  labels:
    app.kubernetes.io/name: dotmac-tenant
    app.kubernetes.io/managed-by: dotmac-management-platform
    dotmac.io/tenant-id: "{{TENANT_ID}}"
    dotmac.io/tenant-plan: "{{TENANT_PLAN}}"
    dotmac.io/billing-status: "{{BILLING_STATUS}}"
  annotations:
    dotmac.io/created-by: "management-platform"
    dotmac.io/tenant-domain: "{{TENANT_DOMAIN}}"
    dotmac.io/license-tier: "{{LICENSE_TIER}}"

---
apiVersion: v1
kind: Secret
metadata:
  name: dotmac-tenant-{{TENANT_ID}}-secrets
  namespace: dotmac-tenant-{{TENANT_ID}}
  labels:
    app.kubernetes.io/name: dotmac-tenant
    dotmac.io/tenant-id: "{{TENANT_ID}}"
type: Opaque
stringData:
  DATABASE_URL: "{{DATABASE_URL}}"
  REDIS_URL: "{{REDIS_URL}}"
  JWT_SECRET_KEY: "{{JWT_SECRET_KEY}}"
  TENANT_API_KEY: "{{TENANT_API_KEY}}"
  LICENSE_KEY: "{{LICENSE_KEY}}"
  SMTP_PASSWORD: "{{SMTP_PASSWORD}}"
  S3_ACCESS_KEY: "{{S3_ACCESS_KEY}}"
  S3_SECRET_KEY: "{{S3_SECRET_KEY}}"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dotmac-tenant-{{TENANT_ID}}-config
  namespace: dotmac-tenant-{{TENANT_ID}}
  labels:
    app.kubernetes.io/name: dotmac-tenant
    dotmac.io/tenant-id: "{{TENANT_ID}}"
data:
  ISP_TENANT_ID: "{{TENANT_ID}}"
  TENANT_NAME: "{{TENANT_NAME}}"
  TENANT_DOMAIN: "{{TENANT_DOMAIN}}"
  ENVIRONMENT: "{{ENVIRONMENT}}"
  LOG_LEVEL: "{{LOG_LEVEL}}"
  
  # Scaling configuration based on plan
  WORKERS: "{{WORKERS}}"
  WORKER_CLASS: "uvicorn.workers.UvicornWorker"
  MAX_REQUESTS: "{{MAX_REQUESTS}}"
  TIMEOUT: "{{TIMEOUT}}"
  
  # Feature flags based on license
  PLUGIN_BILLING_ENABLED: "{{PLUGIN_BILLING_ENABLED}}"
  PLUGIN_ADVANCED_ANALYTICS_ENABLED: "{{PLUGIN_ADVANCED_ANALYTICS_ENABLED}}"
  PLUGIN_API_INTEGRATIONS_ENABLED: "{{PLUGIN_API_INTEGRATIONS_ENABLED}}"
  PLUGIN_CUSTOM_BRANDING_ENABLED: "{{PLUGIN_CUSTOM_BRANDING_ENABLED}}"
  
  # Resource limits based on plan
  MAX_CUSTOMERS: "{{MAX_CUSTOMERS}}"
  MAX_SERVICES: "{{MAX_SERVICES}}"
  MAX_STORAGE_GB: "{{MAX_STORAGE_GB}}"
  API_RATE_LIMIT: "{{API_RATE_LIMIT}}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotmac-tenant-{{TENANT_ID}}
  namespace: dotmac-tenant-{{TENANT_ID}}
  labels:
    app.kubernetes.io/name: dotmac-tenant
    app.kubernetes.io/instance: "{{TENANT_ID}}"
    dotmac.io/tenant-id: "{{TENANT_ID}}"
  annotations:
    dotmac.io/deployment-template-version: "1.0"
spec:
  replicas: {{REPLICAS}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dotmac-tenant
      app.kubernetes.io/instance: "{{TENANT_ID}}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dotmac-tenant
        app.kubernetes.io/instance: "{{TENANT_ID}}"
        dotmac.io/tenant-id: "{{TENANT_ID}}"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        dotmac.io/tenant-metrics: "enabled"
    spec:
      serviceAccountName: dotmac-tenant-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: dotmac-isp-framework
        image: dotmac/isp-framework:{{IMAGE_TAG}}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        # Tenant identification
        - name: ISP_TENANT_ID
          valueFrom:
            configMapKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-config
              key: ISP_TENANT_ID
        - name: TENANT_NAME
          valueFrom:
            configMapKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-config
              key: TENANT_NAME
        # Environment configuration
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-config
              key: LOG_LEVEL
        # Worker configuration
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-config
              key: WORKERS
        # Database and cache
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-secrets
              key: REDIS_URL
        # Security
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-secrets
              key: JWT_SECRET_KEY
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-secrets
              key: LICENSE_KEY
        # Feature flags
        - name: PLUGIN_BILLING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: dotmac-tenant-{{TENANT_ID}}-config
              key: PLUGIN_BILLING_ENABLED
        # Pod metadata
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "{{MEMORY_REQUEST}}"
            cpu: "{{CPU_REQUEST}}"
          limits:
            memory: "{{MEMORY_LIMIT}}"
            cpu: "{{CPU_LIMIT}}"
        livenessProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Tenant-ID
              value: "{{TENANT_ID}}"
          initialDelaySeconds: 45
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Tenant-ID
              value: "{{TENANT_ID}}"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            httpHeaders:
            - name: X-Tenant-ID
              value: "{{TENANT_ID}}"
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 60
        volumeMounts:
        - name: tenant-logs
          mountPath: /app/logs/{{TENANT_ID}}
        - name: tenant-tmp
          mountPath: /app/tmp/{{TENANT_ID}}
        - name: tenant-data
          mountPath: /app/data
      volumes:
      - name: tenant-logs
        persistentVolumeClaim:
          claimName: dotmac-tenant-{{TENANT_ID}}-logs
      - name: tenant-tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: tenant-data
        persistentVolumeClaim:
          claimName: dotmac-tenant-{{TENANT_ID}}-data
      nodeSelector:
        dotmac.io/tenant-node: "{{NODE_SELECTOR}}"
      tolerations:
      - key: "dotmac.io/tenant-{{TENANT_ID}}"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  dotmac.io/tenant-id: "{{TENANT_ID}}"
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: dotmac-tenant-{{TENANT_ID}}
  namespace: dotmac-tenant-{{TENANT_ID}}
  labels:
    app.kubernetes.io/name: dotmac-tenant
    app.kubernetes.io/instance: "{{TENANT_ID}}"
    dotmac.io/tenant-id: "{{TENANT_ID}}"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: dotmac-tenant
    app.kubernetes.io/instance: "{{TENANT_ID}}"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dotmac-tenant-{{TENANT_ID}}-logs
  namespace: dotmac-tenant-{{TENANT_ID}}
  labels:
    app.kubernetes.io/name: dotmac-tenant
    dotmac.io/tenant-id: "{{TENANT_ID}}"
    dotmac.io/volume-type: "logs"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "{{LOG_STORAGE_SIZE}}"
  storageClassName: {{STORAGE_CLASS}}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dotmac-tenant-{{TENANT_ID}}-data
  namespace: dotmac-tenant-{{TENANT_ID}}
  labels:
    app.kubernetes.io/name: dotmac-tenant
    dotmac.io/tenant-id: "{{TENANT_ID}}"
    dotmac.io/volume-type: "data"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "{{DATA_STORAGE_SIZE}}"
  storageClassName: {{STORAGE_CLASS}}