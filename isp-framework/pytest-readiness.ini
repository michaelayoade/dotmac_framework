[tool:pytest]
# AI-First Testing Configuration
# =============================
# This configuration ensures that deployment readiness tests run FIRST
# and fail fast if the application is not ready to start.

minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config  
    --tb=short
    --maxfail=5
    # Run startup tests first, fail fast
    --order-scope=session
    --order-group-scope=module
    
testpaths = tests

# Test markers for AI-first testing
markers =
    startup_critical: Critical startup validation - must pass first
    ai_readiness: AI-guided deployment readiness validation  
    ai_property: AI-guided property-based testing
    schema_validation: Database schema validation tests
    integration_critical: Critical integration tests
    performance_baseline: Performance baseline validation
    security_critical: Security posture validation
    
    # Legacy markers (keep for compatibility)
    unit: Unit tests
    integration: Integration tests  
    revenue_critical: Revenue protection tests
    billing_core: Core billing functionality
    network_critical: Network infrastructure tests

# Test ordering - startup tests run first
pytest_order_group_scope = session

# Fail fast on startup test failures  
--maxfail = 1 if startup_critical else 5

# Generate deployment readiness report
--json-report --json-report-file=deployment_readiness.json

# Coverage for critical paths only
--cov=dotmac_isp.main
--cov=dotmac_isp.core
--cov=dotmac_isp.modules
--cov-fail-under=80
--cov-report=term-missing
--cov-report=html:htmlcov

# Filter warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::pytest.PytestUnknownMarkWarning