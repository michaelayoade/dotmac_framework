name: Security Scanning

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Run Safety scan
      run: safety check --json --output safety-report.json
      continue-on-error: true

    - name: Run pip-audit scan
      run: pip-audit --format=json --output=pip-audit-report.json
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: dependency-security-reports
        path: |
          safety-report.json
          pip-audit-report.json

  code-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Bandit
      run: pip install bandit[toml]

    - name: Run Bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json
        bandit -r src/ -f txt -o bandit-report.txt
      continue-on-error: true

    - name: Upload Bandit reports
      uses: actions/upload-artifact@v4
      with:
        name: code-security-reports
        path: |
          bandit-report.json
          bandit-report.txt

  semgrep-scan:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/python
        generateSarif: "1"

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep.sarif
      if: always()

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  docker-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t dotmac-security-test .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'dotmac-security-test'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, semgrep-scan, secret-scan, docker-scan]
    if: always()
    
    steps:
    - name: Download all security reports
      uses: actions/download-artifact@v4

    - name: Generate consolidated security report
      run: |
        echo "# Security Scan Report - $(date)" > security-summary.md
        echo "" >> security-summary.md
        echo "## Scan Results Summary" >> security-summary.md
        echo "" >> security-summary.md
        
        # Add job status summary
        echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
        echo "- Code Security Scan: ${{ needs.code-scan.result }}" >> security-summary.md
        echo "- Semgrep Scan: ${{ needs.semgrep-scan.result }}" >> security-summary.md
        echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-summary.md
        echo "- Docker Image Scan: ${{ needs.docker-scan.result }}" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "Generated at: $(date)" >> security-summary.md

    - name: Upload security summary
      uses: actions/upload-artifact@v4
      with:
        name: security-summary
        path: security-summary.md