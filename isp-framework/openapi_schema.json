{
  "openapi": "3.1.0",
  "info": {
    "title": "DotMac ISP Framework",
    "description": "Comprehensive ISP management system",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/billing/invoices": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "List Invoices",
        "description": "List invoices with optional filtering.",
        "operationId": "list_invoices_api_v1_billing_invoices_get",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  },
                  "title": "Response List Invoices Api V1 Billing Invoices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Create Invoice",
        "description": "Create a new invoice.",
        "operationId": "create_invoice_api_v1_billing_invoices_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Get Invoice",
        "description": "Get invoice by ID.",
        "operationId": "get_invoice_api_v1_billing_invoices__invoice_id__get",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Update Invoice",
        "description": "Update invoice.",
        "operationId": "update_invoice_api_v1_billing_invoices__invoice_id__patch",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/invoices/{invoice_id}/send": {
      "post": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Send Invoice",
        "description": "Send invoice to customer.",
        "operationId": "send_invoice_api_v1_billing_invoices__invoice_id__send_post",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/payments": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "List Payments",
        "description": "List payments with optional filtering.",
        "operationId": "list_payments_api_v1_billing_payments_get",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Id"
            }
          },
          {
            "name": "invoice_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Invoice Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "title": "Response List Payments Api V1 Billing Payments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Create Payment",
        "description": "Record a new payment.",
        "operationId": "create_payment_api_v1_billing_payments_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/payments/{payment_id}": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Get Payment",
        "description": "Get payment by ID.",
        "operationId": "get_payment_api_v1_billing_payments__payment_id__get",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/credit-notes": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "List Credit Notes",
        "description": "List credit notes.",
        "operationId": "list_credit_notes_api_v1_billing_credit_notes_get",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditNote"
                  },
                  "title": "Response List Credit Notes Api V1 Billing Credit Notes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Create Credit Note",
        "description": "Create a new credit note.",
        "operationId": "create_credit_note_api_v1_billing_credit_notes_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNoteCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/receipts": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "List Receipts",
        "description": "List receipts.",
        "operationId": "list_receipts_api_v1_billing_receipts_get",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Receipt"
                  },
                  "title": "Response List Receipts Api V1 Billing Receipts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Create Receipt",
        "description": "Generate a receipt for payment.",
        "operationId": "create_receipt_api_v1_billing_receipts_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiptCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/tax-rates": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "List Tax Rates",
        "description": "List tax rates.",
        "operationId": "list_tax_rates_api_v1_billing_tax_rates_get",
        "parameters": [
          {
            "name": "jurisdiction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Jurisdiction"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxRate"
                  },
                  "title": "Response List Tax Rates Api V1 Billing Tax Rates Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Create Tax Rate",
        "description": "Create a new tax rate.",
        "operationId": "create_tax_rate_api_v1_billing_tax_rates_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRateCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/subscriptions": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "List Subscriptions",
        "description": "List subscriptions.",
        "operationId": "list_subscriptions_api_v1_billing_subscriptions_get",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  },
                  "title": "Response List Subscriptions Api V1 Billing Subscriptions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Create Subscription",
        "description": "Create a new subscription.",
        "operationId": "create_subscription_api_v1_billing_subscriptions_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/billing/reports/summary": {
      "get": {
        "tags": [
          "billing",
          "billing"
        ],
        "summary": "Get Billing Report",
        "description": "Get billing summary report for date range.",
        "operationId": "get_billing_report_api_v1_billing_reports_summary_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "End Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/plans": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "List Service Plans",
        "description": "List all service plans with optional filtering.",
        "operationId": "list_service_plans_api_v1_services_plans_get",
        "parameters": [
          {
            "name": "service_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ServiceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service Type"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServicePlanResponse"
                  },
                  "title": "Response List Service Plans Api V1 Services Plans Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Create Service Plan",
        "description": "Create a new service plan.",
        "operationId": "create_service_plan_api_v1_services_plans_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/plans/{plan_id}": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Get Service Plan",
        "description": "Get a specific service plan by ID.",
        "operationId": "get_service_plan_api_v1_services_plans__plan_id__get",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePlanResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/instances": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "List Service Instances",
        "description": "List all service instances with optional filtering.",
        "operationId": "list_service_instances_api_v1_services_instances_get",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Customer Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ServiceStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceInstanceResponse"
                  },
                  "title": "Response List Service Instances Api V1 Services Instances Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/activate": {
      "post": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Activate Service",
        "description": "Activate a new service for a customer.",
        "operationId": "activate_service_api_v1_services_activate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceActivationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/instances/{instance_id}/modify": {
      "put": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Modify Service",
        "description": "Modify an existing service instance.",
        "operationId": "modify_service_api_v1_services_instances__instance_id__modify_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceModificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstanceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/instances/{instance_id}/suspend": {
      "put": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Suspend Service",
        "description": "Suspend a service instance.",
        "operationId": "suspend_service_api_v1_services_instances__instance_id__suspend_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 500,
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstanceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/instances/{instance_id}/reactivate": {
      "put": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Reactivate Service",
        "description": "Reactivate a suspended service instance.",
        "operationId": "reactivate_service_api_v1_services_instances__instance_id__reactivate_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInstanceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/provisioning": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "List Provisioning Tasks",
        "description": "List provisioning tasks with optional filtering.",
        "operationId": "list_provisioning_tasks_api_v1_services_provisioning_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProvisioningStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "technician_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Technician Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvisioningTaskResponse"
                  },
                  "title": "Response List Provisioning Tasks Api V1 Services Provisioning Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/provisioning/{task_id}": {
      "put": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Update Provisioning Task",
        "description": "Update a provisioning task.",
        "operationId": "update_provisioning_task_api_v1_services_provisioning__task_id__put",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisioningTaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisioningTaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/usage/{instance_id}": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Get Service Usage",
        "description": "Get service usage data for a specific instance.",
        "operationId": "get_service_usage_api_v1_services_usage__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(daily|weekly|monthly)$",
              "default": "daily",
              "title": "Period"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceUsageResponse"
                  },
                  "title": "Response Get Service Usage Api V1 Services Usage  Instance Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/dashboard": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Get Service Dashboard",
        "description": "Get service dashboard metrics.",
        "operationId": "get_service_dashboard_api_v1_services_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDashboard"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/bulk-operation": {
      "post": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Bulk Service Operation",
        "description": "Perform bulk operations on multiple services.",
        "operationId": "bulk_service_operation_api_v1_services_bulk_operation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkServiceOperation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkServiceOperationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/performance/{instance_id}": {
      "get": {
        "tags": [
          "services",
          "services"
        ],
        "summary": "Get Service Performance",
        "description": "Get performance metrics for a specific service instance.",
        "operationId": "get_service_performance_api_v1_services_performance__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Instance Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePerformanceMetrics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/devices": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Create Network Device",
        "description": "Create a new network device.",
        "operationId": "create_network_device_api_v1_networking_api_v1_network_devices_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDeviceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "List Network Devices",
        "description": "List network devices with pagination and filtering.",
        "operationId": "list_network_devices_api_v1_networking_api_v1_network_devices_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Per Page"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vendor"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNetworkDeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/devices/{device_id}": {
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Get Network Device",
        "description": "Get a specific network device by ID.",
        "operationId": "get_network_device_api_v1_networking_api_v1_network_devices__device_id__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Update Network Device",
        "description": "Update a network device.",
        "operationId": "update_network_device_api_v1_networking_api_v1_network_devices__device_id__put",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkDeviceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkDeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Delete Network Device",
        "description": "Delete a network device.",
        "operationId": "delete_network_device_api_v1_networking_api_v1_network_devices__device_id__delete",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/locations": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Create Network Location",
        "description": "Create a new network location.",
        "operationId": "create_network_location_api_v1_networking_api_v1_network_locations_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkLocationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkLocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "List Network Locations",
        "description": "List network locations with pagination and filtering.",
        "operationId": "list_network_locations_api_v1_networking_api_v1_network_locations_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Per Page"
            }
          },
          {
            "name": "location_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Type"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNetworkLocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/locations/{location_id}": {
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Get Network Location",
        "description": "Get a specific network location by ID.",
        "operationId": "get_network_location_api_v1_networking_api_v1_network_locations__location_id__get",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkLocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/devices/{device_id}/metrics": {
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Get Device Metrics",
        "description": "Get metrics for a specific device.",
        "operationId": "get_device_metrics_api_v1_networking_api_v1_network_devices__device_id__metrics_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "metric_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metric Name"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Time"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkMetricResponse"
                  },
                  "title": "Response Get Device Metrics Api V1 Networking Api V1 Network Devices  Device Id  Metrics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/metrics/aggregated": {
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Get Aggregated Metrics",
        "description": "Get aggregated metrics data.",
        "operationId": "get_aggregated_metrics_api_v1_networking_api_v1_network_metrics_aggregated_get",
        "parameters": [
          {
            "name": "metric_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metric Name"
            }
          },
          {
            "name": "aggregation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(avg|sum|min|max|count)$",
              "default": "avg",
              "title": "Aggregation"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(5m|15m|1h|6h|24h)$",
              "default": "1h",
              "title": "Interval"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Time"
            }
          },
          {
            "name": "device_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/topology": {
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Get Network Topology",
        "description": "Get network topology information.",
        "operationId": "get_network_topology_api_v1_networking_api_v1_network_topology_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "connection_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connection Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkTopologyResponse"
                  },
                  "title": "Response Get Network Topology Api V1 Networking Api V1 Network Topology Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/devices/{device_id}/configurations": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Create Device Configuration",
        "description": "Create a new device configuration.",
        "operationId": "create_device_configuration_api_v1_networking_api_v1_network_devices__device_id__configurations_post",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceConfigurationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigurationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "List Device Configurations",
        "description": "List configurations for a device.",
        "operationId": "list_device_configurations_api_v1_networking_api_v1_network_devices__device_id__configurations_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceConfigurationResponse"
                  },
                  "title": "Response List Device Configurations Api V1 Networking Api V1 Network Devices  Device Id  Configurations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/alerts": {
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "List Network Alerts",
        "description": "List network alerts with pagination and filtering.",
        "operationId": "list_network_alerts_api_v1_networking_api_v1_network_alerts_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Per Page"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedNetworkAlertResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/alerts/{alert_id}/acknowledge": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Acknowledge Alert",
        "description": "Acknowledge a network alert.",
        "operationId": "acknowledge_alert_api_v1_networking_api_v1_network_alerts__alert_id__acknowledge_post",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/alerts/{alert_id}/resolve": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Resolve Alert",
        "description": "Resolve a network alert.",
        "operationId": "resolve_alert_api_v1_networking_api_v1_network_alerts__alert_id__resolve_post",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/device-groups": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Create Device Group",
        "description": "Create a new device group.",
        "operationId": "create_device_group_api_v1_networking_api_v1_network_device_groups_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceGroupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceGroupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "List Device Groups",
        "description": "List device groups.",
        "operationId": "list_device_groups_api_v1_networking_api_v1_network_device_groups_get",
        "parameters": [
          {
            "name": "group_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Group Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceGroupResponse"
                  },
                  "title": "Response List Device Groups Api V1 Networking Api V1 Network Device Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/services": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Create Network Service",
        "description": "Create a new network service.",
        "operationId": "create_network_service_api_v1_networking_api_v1_network_services_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkServiceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "List Network Services",
        "description": "List network services.",
        "operationId": "list_network_services_api_v1_networking_api_v1_network_services_get",
        "parameters": [
          {
            "name": "service_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NetworkServiceResponse"
                  },
                  "title": "Response List Network Services Api V1 Networking Api V1 Network Services Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/maintenance-windows": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Create Maintenance Window",
        "description": "Create a new maintenance window.",
        "operationId": "create_maintenance_window_api_v1_networking_api_v1_network_maintenance_windows_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaintenanceWindowCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "List Maintenance Windows",
        "description": "List maintenance windows.",
        "operationId": "list_maintenance_windows_api_v1_networking_api_v1_network_maintenance_windows_get",
        "parameters": [
          {
            "name": "upcoming_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Upcoming Only"
            }
          },
          {
            "name": "maintenance_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Maintenance Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaintenanceWindowResponse"
                  },
                  "title": "Response List Maintenance Windows Api V1 Networking Api V1 Network Maintenance Windows Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/devices/{device_id}/discovery": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Discover Device Interfaces",
        "description": "Trigger interface discovery for a device.",
        "operationId": "discover_device_interfaces_api_v1_networking_api_v1_network_devices__device_id__discovery_post",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/devices/{device_id}/health-check": {
      "post": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Perform Device Health Check",
        "description": "Perform health check on a device.",
        "operationId": "perform_device_health_check_api_v1_networking_api_v1_network_devices__device_id__health_check_post",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networking/api/v1/network/dashboard/summary": {
      "get": {
        "tags": [
          "networking",
          "Network Integration"
        ],
        "summary": "Get Network Dashboard Summary",
        "description": "Get network dashboard summary statistics.",
        "operationId": "get_network_dashboard_summary_api_v1_networking_api_v1_network_dashboard_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/sales/sales/opportunities": {
      "get": {
        "tags": [
          "sales",
          "sales"
        ],
        "summary": "List Opportunities",
        "description": "List all sales opportunities.",
        "operationId": "list_opportunities_api_v1_sales_sales_opportunities_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/sales/sales/leads": {
      "get": {
        "tags": [
          "sales",
          "sales"
        ],
        "summary": "List Leads",
        "description": "List all sales leads.",
        "operationId": "list_leads_api_v1_sales_sales_leads_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/sales/sales/campaigns": {
      "get": {
        "tags": [
          "sales",
          "sales"
        ],
        "summary": "List Campaigns",
        "description": "List all marketing campaigns.",
        "operationId": "list_campaigns_api_v1_sales_sales_campaigns_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/accounts": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Create Portal Account",
        "description": "Create a new Portal Account.",
        "operationId": "create_portal_account_api_v1_portal_management_portal_management_accounts_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalAccountCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalAccountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "List Portal Accounts",
        "description": "List Portal Accounts with pagination.",
        "operationId": "list_portal_accounts_api_v1_portal_management_portal_management_accounts_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PortalAccountStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse_PortalAccountResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/accounts/admin": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Create Portal Account Admin",
        "description": "Create a new Portal Account with admin privileges.",
        "operationId": "create_portal_account_admin_api_v1_portal_management_portal_management_accounts_admin_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalAccountAdminCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalAccountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/accounts/{account_id}": {
      "get": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Get Portal Account",
        "description": "Get Portal Account by ID.",
        "operationId": "get_portal_account_api_v1_portal_management_portal_management_accounts__account_id__get",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalAccountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Update Portal Account",
        "description": "Update Portal Account.",
        "operationId": "update_portal_account_api_v1_portal_management_portal_management_accounts__account_id__put",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalAccountUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalAccountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Delete Portal Account",
        "description": "Soft delete Portal Account.",
        "operationId": "delete_portal_account_api_v1_portal_management_portal_management_accounts__account_id__delete",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/accounts/{account_id}/admin": {
      "put": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Update Portal Account Admin",
        "description": "Update Portal Account with admin privileges.",
        "operationId": "update_portal_account_admin_api_v1_portal_management_portal_management_accounts__account_id__admin_put",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalAccountAdminUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalAccountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/login": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Portal Login",
        "description": "Portal login endpoint.",
        "operationId": "portal_login_api_v1_portal_management_portal_management_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/refresh": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Refresh Portal Token",
        "description": "Refresh Portal access token.",
        "operationId": "refresh_portal_token_api_v1_portal_management_portal_management_auth_refresh_post",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/logout": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Portal Logout",
        "description": "Portal logout endpoint.",
        "operationId": "portal_logout_api_v1_portal_management_portal_management_auth_logout_post",
        "parameters": [
          {
            "name": "session_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/change-password": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Change Portal Password",
        "description": "Change Portal Account password.",
        "operationId": "change_portal_password_api_v1_portal_management_portal_management_auth_change_password_post",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalPasswordChangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/request-password-reset": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Request Password Reset",
        "description": "Request password reset for Portal Account.",
        "operationId": "request_password_reset_api_v1_portal_management_portal_management_auth_request_password_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalPasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/confirm-password-reset": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Confirm Password Reset",
        "description": "Confirm password reset with token.",
        "operationId": "confirm_password_reset_api_v1_portal_management_portal_management_auth_confirm_password_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalPasswordResetConfirm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/2fa/setup": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Setup 2Fa",
        "description": "Setup two-factor authentication.",
        "operationId": "setup_2fa_api_v1_portal_management_portal_management_auth_2fa_setup_post",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Portal2FASetupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portal2FASetupResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/2fa/verify": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Verify 2Fa Setup",
        "description": "Verify 2FA setup with TOTP code.",
        "operationId": "verify_2fa_setup_api_v1_portal_management_portal_management_auth_2fa_verify_post",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Portal2FAVerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/auth/2fa/{account_id}": {
      "delete": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Disable 2Fa",
        "description": "Disable two-factor authentication.",
        "operationId": "disable_2fa_api_v1_portal_management_portal_management_auth_2fa__account_id__delete",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/accounts/{account_id}/sessions": {
      "get": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Get Portal Sessions",
        "description": "Get all active sessions for Portal Account.",
        "operationId": "get_portal_sessions_api_v1_portal_management_portal_management_accounts__account_id__sessions_get",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Account Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PortalSessionResponse"
                  },
                  "title": "Response Get Portal Sessions Api V1 Portal Management Portal Management Accounts  Account Id  Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/sessions/{session_id}": {
      "delete": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Terminate Portal Session",
        "description": "Terminate a specific Portal session.",
        "operationId": "terminate_portal_session_api_v1_portal_management_portal_management_sessions__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/accounts/bulk-operations": {
      "post": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Bulk Portal Operations",
        "description": "Perform bulk operations on Portal Accounts.",
        "operationId": "bulk_portal_operations_api_v1_portal_management_portal_management_accounts_bulk_operations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortalBulkOperationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalBulkOperationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portal-management/portal-management/analytics": {
      "get": {
        "tags": [
          "portal-management",
          "Portal Management"
        ],
        "summary": "Get Portal Analytics",
        "description": "Get Portal Account analytics and statistics.",
        "operationId": "get_portal_analytics_api_v1_portal_management_portal_management_analytics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalAnalyticsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/admin/dashboard": {
      "get": {
        "tags": [
          "admin",
          "admin-portal"
        ],
        "summary": "Get Admin Dashboard",
        "description": "Get admin dashboard overview.",
        "operationId": "get_admin_dashboard_api_v1_admin_admin_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/admin/customers/overview": {
      "get": {
        "tags": [
          "admin",
          "admin-portal"
        ],
        "summary": "Get Customers Overview",
        "description": "Get customer overview for admin.",
        "operationId": "get_customers_overview_api_v1_admin_admin_customers_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/admin/services/overview": {
      "get": {
        "tags": [
          "admin",
          "admin-portal"
        ],
        "summary": "Get Services Overview",
        "description": "Get services overview for admin.",
        "operationId": "get_services_overview_api_v1_admin_admin_services_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/admin/financial/overview": {
      "get": {
        "tags": [
          "admin",
          "admin-portal"
        ],
        "summary": "Get Financial Overview",
        "description": "Get financial overview for admin.",
        "operationId": "get_financial_overview_api_v1_admin_admin_financial_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/admin/support/overview": {
      "get": {
        "tags": [
          "admin",
          "admin-portal"
        ],
        "summary": "Get Support Overview",
        "description": "Get support overview for admin.",
        "operationId": "get_support_overview_api_v1_admin_admin_support_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/admin/system/health": {
      "get": {
        "tags": [
          "admin",
          "admin-portal"
        ],
        "summary": "Get System Health",
        "description": "Get system health status.",
        "operationId": "get_system_health_api_v1_admin_admin_system_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/admin/reports/available": {
      "get": {
        "tags": [
          "admin",
          "admin-portal"
        ],
        "summary": "Get Available Reports",
        "description": "Get list of available admin reports.",
        "operationId": "get_available_reports_api_v1_admin_admin_reports_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/dashboard": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Customer Dashboard",
        "description": "Get customer dashboard with account overview.",
        "operationId": "get_customer_dashboard_api_v1_customer_customer_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/account/profile": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Account Profile",
        "description": "Get customer account profile.",
        "operationId": "get_account_profile_api_v1_customer_customer_account_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Update Account Profile",
        "description": "Update customer account profile.",
        "operationId": "update_account_profile_api_v1_customer_customer_account_profile_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/services": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Customer Services",
        "description": "Get customer's active services.",
        "operationId": "get_customer_services_api_v1_customer_customer_services_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/services/{service_id}/usage": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Service Usage",
        "description": "Get usage data for a specific service.",
        "operationId": "get_service_usage_api_v1_customer_customer_services__service_id__usage_get",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/billing/invoices": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Customer Invoices",
        "description": "Get customer's invoices.",
        "operationId": "get_customer_invoices_api_v1_customer_customer_billing_invoices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/billing/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Invoice Details",
        "description": "Get detailed invoice information.",
        "operationId": "get_invoice_details_api_v1_customer_customer_billing_invoices__invoice_id__get",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/billing/payments": {
      "post": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Make Payment",
        "description": "Process customer payment.",
        "operationId": "make_payment_api_v1_customer_customer_billing_payments_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/billing/payment-methods": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Payment Methods",
        "description": "Get customer's saved payment methods.",
        "operationId": "get_payment_methods_api_v1_customer_customer_billing_payment_methods_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Add Payment Method",
        "description": "Add new payment method.",
        "operationId": "add_payment_method_api_v1_customer_customer_billing_payment_methods_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/support/tickets": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Customer Tickets",
        "description": "Get customer's support tickets.",
        "operationId": "get_customer_tickets_api_v1_customer_customer_support_tickets_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Create Support Ticket",
        "description": "Create new support ticket.",
        "operationId": "create_support_ticket_api_v1_customer_customer_support_tickets_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/support/tickets/{ticket_id}": {
      "get": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Get Ticket Details",
        "description": "Get support ticket details.",
        "operationId": "get_ticket_details_api_v1_customer_customer_support_tickets__ticket_id__get",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customer/customer/support/tickets/{ticket_id}/comments": {
      "post": {
        "tags": [
          "customer",
          "customer-portal"
        ],
        "summary": "Add Ticket Comment",
        "description": "Add comment to support ticket.",
        "operationId": "add_ticket_comment_api_v1_customer_customer_support_tickets__ticket_id__comments_post",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ticket Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/ssl-status": {
      "get": {
        "summary": "Ssl Status",
        "description": "SSL certificate status endpoint.",
        "operationId": "ssl_status_ssl_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/celery-status": {
      "get": {
        "summary": "Celery Status",
        "description": "Celery task queue status endpoint.",
        "operationId": "celery_status_celery_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/favicon.ico": {
      "get": {
        "summary": "Favicon",
        "description": "Favicon endpoint to prevent 404 errors.",
        "operationId": "favicon_favicon_ico_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlertSeverity": {
        "type": "string",
        "enum": [
          "critical",
          "high",
          "medium",
          "low",
          "info"
        ],
        "title": "AlertSeverity",
        "description": "Alert severity levels."
      },
      "AlertType": {
        "type": "string",
        "enum": [
          "device_down",
          "interface_down",
          "high_cpu",
          "high_memory",
          "high_temperature",
          "high_traffic",
          "power_failure",
          "configuration_change",
          "security_breach",
          "backup_failure"
        ],
        "title": "AlertType",
        "description": "Alert types."
      },
      "BandwidthUnit": {
        "type": "string",
        "enum": [
          "kbps",
          "mbps",
          "gbps"
        ],
        "title": "BandwidthUnit",
        "description": "Bandwidth unit enumeration."
      },
      "BillingReport": {
        "properties": {
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End"
          },
          "total_invoiced": {
            "type": "string",
            "title": "Total Invoiced"
          },
          "total_paid": {
            "type": "string",
            "title": "Total Paid"
          },
          "total_outstanding": {
            "type": "string",
            "title": "Total Outstanding"
          },
          "invoice_count": {
            "type": "integer",
            "title": "Invoice Count"
          },
          "payment_count": {
            "type": "integer",
            "title": "Payment Count"
          },
          "average_payment_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Payment Time"
          }
        },
        "type": "object",
        "required": [
          "period_start",
          "period_end",
          "total_invoiced",
          "total_paid",
          "total_outstanding",
          "invoice_count",
          "payment_count"
        ],
        "title": "BillingReport",
        "description": "Billing report schema."
      },
      "BulkServiceOperation": {
        "properties": {
          "service_instance_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Service Instance Ids"
          },
          "operation": {
            "type": "string",
            "pattern": "^(suspend|reactivate|cancel|maintenance)$",
            "title": "Operation"
          },
          "reason": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Reason"
          },
          "effective_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effective Date"
          },
          "notify_customers": {
            "type": "boolean",
            "title": "Notify Customers",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "service_instance_ids",
          "operation",
          "reason"
        ],
        "title": "BulkServiceOperation",
        "description": "Schema for bulk service operations."
      },
      "BulkServiceOperationResponse": {
        "properties": {
          "total_requested": {
            "type": "integer",
            "title": "Total Requested"
          },
          "successful": {
            "type": "integer",
            "title": "Successful"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "results": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Results"
          },
          "operation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Operation Id"
          }
        },
        "type": "object",
        "required": [
          "total_requested",
          "successful",
          "failed",
          "results",
          "operation_id"
        ],
        "title": "BulkServiceOperationResponse",
        "description": "Schema for bulk service operation responses."
      },
      "CreditNote": {
        "properties": {
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "credit_note_number": {
            "type": "string",
            "title": "Credit Note Number"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "applied_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applied At"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "reason",
          "amount",
          "id",
          "credit_note_number",
          "status",
          "created_at"
        ],
        "title": "CreditNote",
        "description": "Credit note schema."
      },
      "CreditNoteCreate": {
        "properties": {
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "reason",
          "amount"
        ],
        "title": "CreditNoteCreate",
        "description": "Create credit note schema."
      },
      "DeviceConfigurationCreate": {
        "properties": {
          "device_id": {
            "type": "string",
            "title": "Device Id",
            "description": "Device ID"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Configuration name"
          },
          "version": {
            "type": "string",
            "maxLength": 50,
            "title": "Version",
            "description": "Configuration version"
          },
          "configuration_data": {
            "type": "string",
            "title": "Configuration Data",
            "description": "Configuration data"
          },
          "source": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Configuration source"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Configuration description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Configuration tags"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "name",
          "version",
          "configuration_data"
        ],
        "title": "DeviceConfigurationCreate",
        "description": "Schema for creating a device configuration."
      },
      "DeviceConfigurationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Configuration ID"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id",
            "description": "Device ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Configuration name"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Configuration version"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Is active configuration"
          },
          "is_backup": {
            "type": "boolean",
            "title": "Is Backup",
            "description": "Is backup configuration"
          },
          "configuration_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration Hash",
            "description": "Configuration hash"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Configuration source"
          },
          "deployment_status": {
            "type": "string",
            "title": "Deployment Status",
            "description": "Deployment status"
          },
          "deployment_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Time",
            "description": "Deployment time"
          },
          "syntax_validated": {
            "type": "boolean",
            "title": "Syntax Validated",
            "description": "Syntax validation status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "device_id",
          "name",
          "version",
          "is_active",
          "is_backup",
          "deployment_status",
          "syntax_validated",
          "created_at",
          "updated_at"
        ],
        "title": "DeviceConfigurationResponse",
        "description": "Schema for device configuration response."
      },
      "DeviceGroupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Group name"
          },
          "group_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Group Type",
            "description": "Group type"
          },
          "monitoring_template": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Monitoring Template",
            "description": "Monitoring template"
          },
          "alert_rules": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alert Rules",
            "description": "Alert rules"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Group description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Group tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "group_type"
        ],
        "title": "DeviceGroupCreate",
        "description": "Schema for creating a device group."
      },
      "DeviceGroupResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Group ID"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Group name"
          },
          "group_type": {
            "type": "string",
            "title": "Group Type",
            "description": "Group type"
          },
          "monitoring_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monitoring Template",
            "description": "Monitoring template"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Group description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "name",
          "group_type",
          "created_at",
          "updated_at"
        ],
        "title": "DeviceGroupResponse",
        "description": "Schema for device group response."
      },
      "DeviceType": {
        "type": "string",
        "enum": [
          "router",
          "switch",
          "access_point",
          "firewall",
          "load_balancer",
          "olt",
          "onu",
          "modem",
          "cpe",
          "server",
          "ups",
          "pdu",
          "optical_amplifier",
          "splitter",
          "patch_panel"
        ],
        "title": "DeviceType",
        "description": "Network device types."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Invoice": {
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "Customer Id"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time",
            "title": "Issue Date"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "title": "Due Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "line_items": {
            "items": {
              "$ref": "#/components/schemas/LineItem"
            },
            "type": "array",
            "title": "Line Items",
            "default": []
          },
          "subtotal": {
            "type": "string",
            "title": "Subtotal"
          },
          "tax_total": {
            "type": "string",
            "title": "Tax Total"
          },
          "discount_total": {
            "type": "string",
            "title": "Discount Total"
          },
          "total_amount": {
            "type": "string",
            "title": "Total Amount"
          },
          "amount_paid": {
            "type": "string",
            "title": "Amount Paid"
          },
          "amount_due": {
            "type": "string",
            "title": "Amount Due"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "issue_date",
          "due_date",
          "id",
          "status",
          "subtotal",
          "tax_total",
          "discount_total",
          "total_amount",
          "amount_paid",
          "amount_due",
          "created_at",
          "updated_at"
        ],
        "title": "Invoice",
        "description": "Invoice schema."
      },
      "InvoiceCreate": {
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "Customer Id"
          },
          "invoice_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Number"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time",
            "title": "Issue Date"
          },
          "due_date": {
            "type": "string",
            "format": "date-time",
            "title": "Due Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "line_items": {
            "items": {
              "$ref": "#/components/schemas/LineItemCreate"
            },
            "type": "array",
            "title": "Line Items",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "issue_date",
          "due_date"
        ],
        "title": "InvoiceCreate",
        "description": "Create invoice schema."
      },
      "InvoiceStatus": {
        "type": "string",
        "enum": [
          "draft",
          "sent",
          "paid",
          "overdue",
          "cancelled"
        ],
        "title": "InvoiceStatus",
        "description": "Invoice status enumeration."
      },
      "InvoiceUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          }
        },
        "type": "object",
        "title": "InvoiceUpdate",
        "description": "Update invoice schema."
      },
      "LineItem": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "quantity": {
            "type": "string",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "string",
            "title": "Unit Price"
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate"
          },
          "discount_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Rate"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "subtotal": {
            "type": "string",
            "title": "Subtotal"
          },
          "tax_amount": {
            "type": "string",
            "title": "Tax Amount"
          },
          "discount_amount": {
            "type": "string",
            "title": "Discount Amount"
          },
          "total": {
            "type": "string",
            "title": "Total"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "description",
          "quantity",
          "unit_price",
          "id",
          "subtotal",
          "tax_amount",
          "discount_amount",
          "total",
          "created_at"
        ],
        "title": "LineItem",
        "description": "Line item schema."
      },
      "LineItemCreate": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Quantity"
          },
          "unit_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Unit Price"
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate"
          },
          "discount_rate": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Rate"
          }
        },
        "type": "object",
        "required": [
          "description",
          "quantity",
          "unit_price"
        ],
        "title": "LineItemCreate",
        "description": "Create line item schema."
      },
      "MaintenanceWindowCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Maintenance window name"
          },
          "maintenance_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Maintenance Type",
            "description": "Maintenance type"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time",
            "description": "Start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time",
            "description": "End time"
          },
          "timezone": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone",
            "description": "Timezone",
            "default": "UTC"
          },
          "impact_level": {
            "type": "string",
            "maxLength": 20,
            "title": "Impact Level",
            "description": "Impact level"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Maintenance description"
          },
          "work_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Instructions",
            "description": "Work instructions"
          },
          "rollback_plan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rollback Plan",
            "description": "Rollback plan"
          },
          "affected_services": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Affected Services",
            "description": "Affected services"
          },
          "notifications_enabled": {
            "type": "boolean",
            "title": "Notifications Enabled",
            "description": "Notifications enabled",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Maintenance tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "maintenance_type",
          "start_time",
          "end_time",
          "impact_level",
          "description"
        ],
        "title": "MaintenanceWindowCreate",
        "description": "Schema for creating a maintenance window."
      },
      "MaintenanceWindowResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Maintenance window ID"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Maintenance window name"
          },
          "maintenance_type": {
            "type": "string",
            "title": "Maintenance Type",
            "description": "Maintenance type"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time",
            "description": "Start time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time",
            "description": "End time"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "description": "Timezone"
          },
          "impact_level": {
            "type": "string",
            "title": "Impact Level",
            "description": "Impact level"
          },
          "approval_status": {
            "type": "string",
            "title": "Approval Status",
            "description": "Approval status"
          },
          "execution_status": {
            "type": "string",
            "title": "Execution Status",
            "description": "Execution status"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Maintenance description"
          },
          "notifications_enabled": {
            "type": "boolean",
            "title": "Notifications Enabled",
            "description": "Notifications enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "name",
          "maintenance_type",
          "start_time",
          "end_time",
          "timezone",
          "impact_level",
          "approval_status",
          "execution_status",
          "description",
          "notifications_enabled",
          "created_at",
          "updated_at"
        ],
        "title": "MaintenanceWindowResponse",
        "description": "Schema for maintenance window response."
      },
      "NetworkAlertResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Alert ID"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "description": "Device ID"
          },
          "interface_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interface Id",
            "description": "Interface ID"
          },
          "alert_type": {
            "$ref": "#/components/schemas/AlertType",
            "description": "Alert type"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "Alert severity"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Alert title"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Alert message"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Is alert active"
          },
          "is_acknowledged": {
            "type": "boolean",
            "title": "Is Acknowledged",
            "description": "Is alert acknowledged"
          },
          "acknowledged_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acknowledged At",
            "description": "Acknowledgment timestamp"
          },
          "resolved_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolved At",
            "description": "Resolution timestamp"
          },
          "metric_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Name",
            "description": "Related metric name"
          },
          "threshold_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold Value",
            "description": "Threshold value"
          },
          "current_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Value",
            "description": "Current metric value"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "alert_type",
          "severity",
          "title",
          "message",
          "is_active",
          "is_acknowledged",
          "created_at"
        ],
        "title": "NetworkAlertResponse",
        "description": "Schema for network alert response."
      },
      "NetworkDeviceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Device name"
          },
          "hostname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Hostname",
            "description": "Device hostname"
          },
          "device_type": {
            "$ref": "#/components/schemas/DeviceType",
            "description": "Device type"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Device model"
          },
          "vendor": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor",
            "description": "Device vendor"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number",
            "description": "Serial number"
          },
          "asset_tag": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Tag",
            "description": "Asset tag"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Device description"
          },
          "management_ip": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipvanyaddress"
              },
              {
                "type": "null"
              }
            ],
            "title": "Management Ip",
            "description": "Management IP address"
          },
          "subnet_mask": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 18
              },
              {
                "type": "null"
              }
            ],
            "title": "Subnet Mask",
            "description": "Subnet mask"
          },
          "gateway": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipvanyaddress"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway",
            "description": "Default gateway"
          },
          "dns_servers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dns Servers",
            "description": "DNS servers"
          },
          "snmp_community": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Snmp Community",
            "description": "SNMP community string"
          },
          "snmp_version": {
            "type": "string",
            "title": "Snmp Version",
            "description": "SNMP version",
            "default": "v2c"
          },
          "snmp_port": {
            "type": "integer",
            "maximum": 65535.0,
            "minimum": 1.0,
            "title": "Snmp Port",
            "description": "SNMP port",
            "default": 161
          },
          "snmp_enabled": {
            "type": "boolean",
            "title": "Snmp Enabled",
            "description": "SNMP monitoring enabled",
            "default": true
          },
          "cpu_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Count",
            "description": "Number of CPUs"
          },
          "memory_total_mb": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Total Mb",
            "description": "Total memory in MB"
          },
          "storage_total_gb": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Total Gb",
            "description": "Total storage in GB"
          },
          "power_consumption_watts": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Power Consumption Watts",
            "description": "Power consumption in watts"
          },
          "os_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Os Version",
            "description": "Operating system version"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version",
            "description": "Firmware version"
          },
          "street_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Street Address",
            "description": "Street address"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "state_province": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "State Province",
            "description": "State/Province"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal code"
          },
          "country_code": {
            "type": "string",
            "maxLength": 2,
            "title": "Country Code",
            "description": "Country code",
            "default": "US"
          },
          "rack_location": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack Location",
            "description": "Rack location"
          },
          "rack_unit": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack Unit",
            "description": "Rack unit"
          },
          "datacenter": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter",
            "description": "Datacenter"
          },
          "monitoring_enabled": {
            "type": "boolean",
            "title": "Monitoring Enabled",
            "description": "Monitoring enabled",
            "default": true
          },
          "monitoring_interval": {
            "type": "integer",
            "maximum": 3600.0,
            "minimum": 30.0,
            "title": "Monitoring Interval",
            "description": "Monitoring interval in seconds",
            "default": 300
          },
          "warranty_expires": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warranty Expires",
            "description": "Warranty expiration date"
          },
          "next_maintenance": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Maintenance",
            "description": "Next maintenance date"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Device tags"
          },
          "custom_fields": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Fields",
            "description": "Custom fields"
          }
        },
        "type": "object",
        "required": [
          "name",
          "device_type"
        ],
        "title": "NetworkDeviceCreate",
        "description": "Schema for creating a network device."
      },
      "NetworkDeviceResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Device name"
          },
          "hostname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Hostname",
            "description": "Device hostname"
          },
          "device_type": {
            "$ref": "#/components/schemas/DeviceType",
            "description": "Device type"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Device model"
          },
          "vendor": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor",
            "description": "Device vendor"
          },
          "serial_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Serial Number",
            "description": "Serial number"
          },
          "asset_tag": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Tag",
            "description": "Asset tag"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Device description"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Device ID"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Device status"
          },
          "management_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Management Ip",
            "description": "Management IP address"
          },
          "subnet_mask": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subnet Mask",
            "description": "Subnet mask"
          },
          "gateway": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gateway",
            "description": "Default gateway"
          },
          "snmp_version": {
            "type": "string",
            "title": "Snmp Version",
            "description": "SNMP version"
          },
          "snmp_port": {
            "type": "integer",
            "title": "Snmp Port",
            "description": "SNMP port"
          },
          "snmp_enabled": {
            "type": "boolean",
            "title": "Snmp Enabled",
            "description": "SNMP monitoring enabled"
          },
          "cpu_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Count",
            "description": "Number of CPUs"
          },
          "memory_total_mb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Total Mb",
            "description": "Total memory in MB"
          },
          "storage_total_gb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Total Gb",
            "description": "Total storage in GB"
          },
          "os_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Os Version",
            "description": "Operating system version"
          },
          "firmware_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version",
            "description": "Firmware version"
          },
          "last_config_backup": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Config Backup",
            "description": "Last configuration backup"
          },
          "street_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street Address",
            "description": "Street address"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "full_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Address",
            "description": "Full formatted address"
          },
          "monitoring_enabled": {
            "type": "boolean",
            "title": "Monitoring Enabled",
            "description": "Monitoring enabled"
          },
          "monitoring_interval": {
            "type": "integer",
            "title": "Monitoring Interval",
            "description": "Monitoring interval in seconds"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Device tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "device_type",
          "id",
          "tenant_id",
          "status",
          "snmp_version",
          "snmp_port",
          "snmp_enabled",
          "monitoring_enabled",
          "monitoring_interval",
          "created_at",
          "updated_at"
        ],
        "title": "NetworkDeviceResponse",
        "description": "Schema for network device response."
      },
      "NetworkDeviceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Device name"
          },
          "hostname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Hostname",
            "description": "Device hostname"
          },
          "device_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DeviceType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Device type"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "Device model"
          },
          "vendor": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Vendor",
            "description": "Device vendor"
          },
          "management_ip": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipvanyaddress"
              },
              {
                "type": "null"
              }
            ],
            "title": "Management Ip",
            "description": "Management IP address"
          },
          "snmp_community": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Snmp Community",
            "description": "SNMP community string"
          },
          "monitoring_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monitoring Enabled",
            "description": "Monitoring enabled"
          },
          "monitoring_interval": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3600.0,
                "minimum": 30.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Monitoring Interval",
            "description": "Monitoring interval in seconds"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Device description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Device tags"
          },
          "custom_fields": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Fields",
            "description": "Custom fields"
          }
        },
        "type": "object",
        "title": "NetworkDeviceUpdate",
        "description": "Schema for updating a network device."
      },
      "NetworkLocationCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Location name"
          },
          "location_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Location Type",
            "description": "Location type"
          },
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Location code"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude"
          },
          "elevation_meters": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Elevation Meters",
            "description": "Elevation in meters"
          },
          "street_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Street Address",
            "description": "Street address"
          },
          "city": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "state_province": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "State Province",
            "description": "State/Province"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal code"
          },
          "country_code": {
            "type": "string",
            "maxLength": 2,
            "title": "Country Code",
            "description": "Country code",
            "default": "US"
          },
          "facility_size_sqm": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Facility Size Sqm",
            "description": "Facility size in square meters"
          },
          "power_capacity_kw": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Power Capacity Kw",
            "description": "Power capacity in kW"
          },
          "cooling_capacity_tons": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Cooling Capacity Tons",
            "description": "Cooling capacity in tons"
          },
          "rack_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack Count",
            "description": "Number of racks"
          },
          "contact_person": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Person",
            "description": "Contact person"
          },
          "contact_phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Phone",
            "description": "Contact phone"
          },
          "contact_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Email",
            "description": "Contact email"
          },
          "service_area_radius_km": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Area Radius Km",
            "description": "Service area radius in km"
          },
          "population_served": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Population Served",
            "description": "Population served"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Location description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Location tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "location_type"
        ],
        "title": "NetworkLocationCreate",
        "description": "Schema for creating a network location."
      },
      "NetworkLocationResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Location name"
          },
          "location_type": {
            "type": "string",
            "maxLength": 50,
            "title": "Location Type",
            "description": "Location type"
          },
          "code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Location code"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Location ID"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude"
          },
          "coordinates": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coordinates",
            "description": "Coordinates as lat/lon dict"
          },
          "street_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street Address",
            "description": "Street address"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "full_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Address",
            "description": "Full formatted address"
          },
          "facility_size_sqm": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Facility Size Sqm",
            "description": "Facility size in square meters"
          },
          "rack_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rack Count",
            "description": "Number of racks"
          },
          "contact_person": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Person",
            "description": "Contact person"
          },
          "contact_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Phone",
            "description": "Contact phone"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "location_type",
          "id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "NetworkLocationResponse",
        "description": "Schema for network location response."
      },
      "NetworkMetricResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Metric ID"
          },
          "device_id": {
            "type": "string",
            "title": "Device Id",
            "description": "Device ID"
          },
          "interface_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interface Id",
            "description": "Interface ID"
          },
          "metric_name": {
            "type": "string",
            "title": "Metric Name",
            "description": "Metric name"
          },
          "metric_type": {
            "type": "string",
            "title": "Metric Type",
            "description": "Metric type"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "Metric value"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit",
            "description": "Metric unit"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Metric timestamp"
          },
          "tags": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Metric tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "device_id",
          "metric_name",
          "metric_type",
          "value",
          "timestamp"
        ],
        "title": "NetworkMetricResponse",
        "description": "Schema for network metric response."
      },
      "NetworkServiceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Service name"
          },
          "service_type": {
            "type": "string",
            "maxLength": 100,
            "title": "Service Type",
            "description": "Service type"
          },
          "protocol": {
            "type": "string",
            "maxLength": 20,
            "title": "Protocol",
            "description": "Protocol"
          },
          "port": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 65535.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Port",
            "description": "Port number"
          },
          "listen_address": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipvanyaddress"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listen Address",
            "description": "Listen address"
          },
          "configuration": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration",
            "description": "Service configuration"
          },
          "health_check_enabled": {
            "type": "boolean",
            "title": "Health Check Enabled",
            "description": "Health check enabled",
            "default": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Service description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Service tags"
          }
        },
        "type": "object",
        "required": [
          "name",
          "service_type",
          "protocol"
        ],
        "title": "NetworkServiceCreate",
        "description": "Schema for creating a network service."
      },
      "NetworkServiceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Service ID"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "description": "Tenant ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Service name"
          },
          "service_type": {
            "type": "string",
            "title": "Service Type",
            "description": "Service type"
          },
          "protocol": {
            "type": "string",
            "title": "Protocol",
            "description": "Protocol"
          },
          "port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Port",
            "description": "Port number"
          },
          "listen_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listen Address",
            "description": "Listen address"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service status"
          },
          "health_check_enabled": {
            "type": "boolean",
            "title": "Health Check Enabled",
            "description": "Health check enabled"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "name",
          "service_type",
          "protocol",
          "status",
          "health_check_enabled",
          "created_at",
          "updated_at"
        ],
        "title": "NetworkServiceResponse",
        "description": "Schema for network service response."
      },
      "NetworkTopologyResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Topology ID"
          },
          "parent_device_id": {
            "type": "string",
            "title": "Parent Device Id",
            "description": "Parent device ID"
          },
          "child_device_id": {
            "type": "string",
            "title": "Child Device Id",
            "description": "Child device ID"
          },
          "connection_type": {
            "type": "string",
            "title": "Connection Type",
            "description": "Connection type"
          },
          "parent_interface_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Interface Id",
            "description": "Parent interface ID"
          },
          "child_interface_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Interface Id",
            "description": "Child interface ID"
          },
          "bandwidth_mbps": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bandwidth Mbps",
            "description": "Connection bandwidth in Mbps"
          },
          "distance_meters": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distance Meters",
            "description": "Connection distance in meters"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Connection description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "parent_device_id",
          "child_device_id",
          "connection_type"
        ],
        "title": "NetworkTopologyResponse",
        "description": "Schema for network topology response."
      },
      "PaginatedNetworkAlertResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Items per page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Total number of pages"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/NetworkAlertResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Network alerts"
          }
        },
        "type": "object",
        "required": [
          "total",
          "page",
          "per_page",
          "total_pages",
          "items"
        ],
        "title": "PaginatedNetworkAlertResponse",
        "description": "Paginated network alert response."
      },
      "PaginatedNetworkDeviceResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Items per page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Total number of pages"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/NetworkDeviceResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Network devices"
          }
        },
        "type": "object",
        "required": [
          "total",
          "page",
          "per_page",
          "total_pages",
          "items"
        ],
        "title": "PaginatedNetworkDeviceResponse",
        "description": "Paginated network device response."
      },
      "PaginatedNetworkLocationResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of items"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Items per page"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Total number of pages"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/NetworkLocationResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Network locations"
          }
        },
        "type": "object",
        "required": [
          "total",
          "page",
          "per_page",
          "total_pages",
          "items"
        ],
        "title": "PaginatedNetworkLocationResponse",
        "description": "Paginated network location response."
      },
      "PaginatedResponse_PortalAccountResponse_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PortalAccountResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages"
        ],
        "title": "PaginatedResponse[PortalAccountResponse]"
      },
      "Payment": {
        "properties": {
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "reference_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Number"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Payment Date"
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "transaction_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transaction Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "amount",
          "payment_method",
          "id",
          "payment_date",
          "status",
          "created_at"
        ],
        "title": "Payment",
        "description": "Payment schema."
      },
      "PaymentCreate": {
        "properties": {
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "reference_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Number"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "amount",
          "payment_method"
        ],
        "title": "PaymentCreate",
        "description": "Create payment schema."
      },
      "PaymentMethod": {
        "type": "string",
        "enum": [
          "credit_card",
          "bank_transfer",
          "check",
          "cash",
          "ach"
        ],
        "title": "PaymentMethod",
        "description": "Payment method enumeration."
      },
      "PaymentStatus": {
        "type": "string",
        "enum": [
          "pending",
          "completed",
          "failed",
          "refunded"
        ],
        "title": "PaymentStatus",
        "description": "Payment status enumeration."
      },
      "Portal2FASetupRequest": {
        "properties": {
          "method": {
            "type": "string",
            "pattern": "^(totp|sms|email)$",
            "title": "Method"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          }
        },
        "type": "object",
        "required": [
          "method"
        ],
        "title": "Portal2FASetupRequest",
        "description": "Schema for 2FA setup request."
      },
      "Portal2FASetupResponse": {
        "properties": {
          "secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret"
          },
          "qr_code_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qr Code Url"
          },
          "backup_codes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Backup Codes",
            "default": []
          },
          "setup_complete": {
            "type": "boolean",
            "title": "Setup Complete",
            "default": false
          }
        },
        "type": "object",
        "title": "Portal2FASetupResponse",
        "description": "Schema for 2FA setup response."
      },
      "Portal2FAVerifyRequest": {
        "properties": {
          "code": {
            "type": "string",
            "maxLength": 10,
            "title": "Code"
          },
          "backup_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Backup Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "Portal2FAVerifyRequest",
        "description": "Schema for 2FA verification."
      },
      "PortalAccountAdminCreate": {
        "properties": {
          "account_type": {
            "$ref": "#/components/schemas/PortalAccountType",
            "default": "customer"
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "sms_notifications": {
            "type": "boolean",
            "title": "Sms Notifications",
            "default": false
          },
          "theme_preference": {
            "type": "string",
            "pattern": "^(light|dark|auto)$",
            "title": "Theme Preference",
            "default": "light"
          },
          "language_preference": {
            "type": "string",
            "maxLength": 10,
            "title": "Language Preference",
            "default": "en"
          },
          "timezone_preference": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone Preference",
            "default": "UTC"
          },
          "session_timeout_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 5.0,
            "title": "Session Timeout Minutes",
            "default": 30
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Password"
          },
          "customer_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "portal_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Portal Id"
          },
          "status": {
            "$ref": "#/components/schemas/PortalAccountStatus",
            "default": "active"
          },
          "must_change_password": {
            "type": "boolean",
            "title": "Must Change Password",
            "default": true
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified",
            "default": false
          },
          "phone_verified": {
            "type": "boolean",
            "title": "Phone Verified",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "PortalAccountAdminCreate",
        "description": "Schema for admin creation of Portal Account."
      },
      "PortalAccountAdminUpdate": {
        "properties": {
          "email_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Notifications"
          },
          "sms_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Notifications"
          },
          "theme_preference": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(light|dark|auto)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Preference"
          },
          "language_preference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Preference"
          },
          "timezone_preference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone Preference"
          },
          "session_timeout_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 5.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Timeout Minutes"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PortalAccountStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "must_change_password": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Must Change Password"
          },
          "email_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Verified"
          },
          "phone_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Verified"
          },
          "two_factor_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Factor Enabled"
          },
          "failed_login_attempts": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed Login Attempts"
          },
          "security_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Security Notes"
          }
        },
        "type": "object",
        "title": "PortalAccountAdminUpdate",
        "description": "Schema for admin updates to Portal Account."
      },
      "PortalAccountCreate": {
        "properties": {
          "account_type": {
            "$ref": "#/components/schemas/PortalAccountType",
            "default": "customer"
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "sms_notifications": {
            "type": "boolean",
            "title": "Sms Notifications",
            "default": false
          },
          "theme_preference": {
            "type": "string",
            "pattern": "^(light|dark|auto)$",
            "title": "Theme Preference",
            "default": "light"
          },
          "language_preference": {
            "type": "string",
            "maxLength": 10,
            "title": "Language Preference",
            "default": "en"
          },
          "timezone_preference": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone Preference",
            "default": "UTC"
          },
          "session_timeout_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 5.0,
            "title": "Session Timeout Minutes",
            "default": 30
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Password"
          },
          "customer_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "portal_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Portal Id"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "PortalAccountCreate",
        "description": "Schema for creating a new Portal Account."
      },
      "PortalAccountResponse": {
        "properties": {
          "account_type": {
            "$ref": "#/components/schemas/PortalAccountType",
            "default": "customer"
          },
          "email_notifications": {
            "type": "boolean",
            "title": "Email Notifications",
            "default": true
          },
          "sms_notifications": {
            "type": "boolean",
            "title": "Sms Notifications",
            "default": false
          },
          "theme_preference": {
            "type": "string",
            "pattern": "^(light|dark|auto)$",
            "title": "Theme Preference",
            "default": "light"
          },
          "language_preference": {
            "type": "string",
            "maxLength": 10,
            "title": "Language Preference",
            "default": "en"
          },
          "timezone_preference": {
            "type": "string",
            "maxLength": 50,
            "title": "Timezone Preference",
            "default": "UTC"
          },
          "session_timeout_minutes": {
            "type": "integer",
            "maximum": 480.0,
            "minimum": 5.0,
            "title": "Session Timeout Minutes",
            "default": 30
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "portal_id": {
            "type": "string",
            "title": "Portal Id"
          },
          "status": {
            "$ref": "#/components/schemas/PortalAccountStatus"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "two_factor_enabled": {
            "type": "boolean",
            "title": "Two Factor Enabled"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified"
          },
          "phone_verified": {
            "type": "boolean",
            "title": "Phone Verified"
          },
          "must_change_password": {
            "type": "boolean",
            "title": "Must Change Password"
          },
          "last_successful_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Successful Login"
          },
          "password_changed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password Changed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "portal_id",
          "status",
          "tenant_id",
          "two_factor_enabled",
          "email_verified",
          "phone_verified",
          "must_change_password",
          "last_successful_login",
          "password_changed_at",
          "created_at",
          "updated_at"
        ],
        "title": "PortalAccountResponse",
        "description": "Schema for Portal Account response."
      },
      "PortalAccountStatus": {
        "type": "string",
        "enum": [
          "active",
          "suspended",
          "locked",
          "pending_activation",
          "deactivated"
        ],
        "title": "PortalAccountStatus",
        "description": "Portal account status enumeration."
      },
      "PortalAccountType": {
        "type": "string",
        "enum": [
          "customer",
          "technician",
          "reseller"
        ],
        "title": "PortalAccountType",
        "description": "Portal account type enumeration."
      },
      "PortalAccountUpdate": {
        "properties": {
          "email_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Notifications"
          },
          "sms_notifications": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sms Notifications"
          },
          "theme_preference": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(light|dark|auto)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme Preference"
          },
          "language_preference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Preference"
          },
          "timezone_preference": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone Preference"
          },
          "session_timeout_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 480.0,
                "minimum": 5.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Timeout Minutes"
          }
        },
        "type": "object",
        "title": "PortalAccountUpdate",
        "description": "Schema for updating Portal Account."
      },
      "PortalAnalyticsResponse": {
        "properties": {
          "total_accounts": {
            "type": "integer",
            "title": "Total Accounts"
          },
          "active_accounts": {
            "type": "integer",
            "title": "Active Accounts"
          },
          "suspended_accounts": {
            "type": "integer",
            "title": "Suspended Accounts"
          },
          "locked_accounts": {
            "type": "integer",
            "title": "Locked Accounts"
          },
          "pending_accounts": {
            "type": "integer",
            "title": "Pending Accounts"
          },
          "total_sessions_today": {
            "type": "integer",
            "title": "Total Sessions Today"
          },
          "active_sessions": {
            "type": "integer",
            "title": "Active Sessions"
          },
          "failed_logins_today": {
            "type": "integer",
            "title": "Failed Logins Today"
          },
          "two_factor_enabled_count": {
            "type": "integer",
            "title": "Two Factor Enabled Count"
          },
          "password_expires_soon_count": {
            "type": "integer",
            "title": "Password Expires Soon Count"
          },
          "top_locations": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Locations",
            "default": []
          },
          "security_alerts_count": {
            "type": "integer",
            "title": "Security Alerts Count"
          }
        },
        "type": "object",
        "required": [
          "total_accounts",
          "active_accounts",
          "suspended_accounts",
          "locked_accounts",
          "pending_accounts",
          "total_sessions_today",
          "active_sessions",
          "failed_logins_today",
          "two_factor_enabled_count",
          "password_expires_soon_count",
          "security_alerts_count"
        ],
        "title": "PortalAnalyticsResponse",
        "description": "Schema for portal analytics data."
      },
      "PortalBulkOperationRequest": {
        "properties": {
          "portal_account_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Portal Account Ids"
          },
          "operation": {
            "type": "string",
            "pattern": "^(activate|suspend|lock|unlock|reset_2fa)$",
            "title": "Operation"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "portal_account_ids",
          "operation"
        ],
        "title": "PortalBulkOperationRequest",
        "description": "Schema for bulk operations on Portal Accounts."
      },
      "PortalBulkOperationResponse": {
        "properties": {
          "total_requested": {
            "type": "integer",
            "title": "Total Requested"
          },
          "successful": {
            "type": "integer",
            "title": "Successful"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          },
          "processed_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Processed Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "total_requested",
          "successful",
          "failed"
        ],
        "title": "PortalBulkOperationResponse",
        "description": "Schema for bulk operation response."
      },
      "PortalLoginRequest": {
        "properties": {
          "portal_id": {
            "type": "string",
            "maxLength": 20,
            "title": "Portal Id"
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "title": "Password"
          },
          "two_factor_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Factor Code"
          },
          "remember_me": {
            "type": "boolean",
            "title": "Remember Me",
            "default": false
          },
          "device_fingerprint": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Fingerprint"
          }
        },
        "type": "object",
        "required": [
          "portal_id",
          "password"
        ],
        "title": "PortalLoginRequest",
        "description": "Schema for portal login request."
      },
      "PortalLoginResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "expires_in": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "portal_account": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PortalAccountResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "require_password_change": {
            "type": "boolean",
            "title": "Require Password Change",
            "default": false
          },
          "require_two_factor": {
            "type": "boolean",
            "title": "Require Two Factor",
            "default": false
          },
          "two_factor_methods": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Two Factor Methods",
            "default": []
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "PortalLoginResponse",
        "description": "Schema for portal login response."
      },
      "PortalPasswordChangeRequest": {
        "properties": {
          "current_password": {
            "type": "string",
            "maxLength": 128,
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "PortalPasswordChangeRequest",
        "description": "Schema for portal password change."
      },
      "PortalPasswordResetConfirm": {
        "properties": {
          "reset_token": {
            "type": "string",
            "maxLength": 255,
            "title": "Reset Token"
          },
          "new_password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "reset_token",
          "new_password"
        ],
        "title": "PortalPasswordResetConfirm",
        "description": "Schema for portal password reset confirmation."
      },
      "PortalPasswordResetRequest": {
        "properties": {
          "portal_id": {
            "type": "string",
            "maxLength": 20,
            "title": "Portal Id"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "required": [
          "portal_id"
        ],
        "title": "PortalPasswordResetRequest",
        "description": "Schema for portal password reset request."
      },
      "PortalSessionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_token": {
            "type": "string",
            "title": "Session Token"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "location_country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Country"
          },
          "location_city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location City"
          },
          "login_at": {
            "type": "string",
            "format": "date-time",
            "title": "Login At"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time",
            "title": "Last Activity"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "session_token",
          "ip_address",
          "user_agent",
          "location_country",
          "location_city",
          "login_at",
          "last_activity",
          "expires_at",
          "is_active",
          "duration_minutes"
        ],
        "title": "PortalSessionResponse",
        "description": "Schema for portal session information."
      },
      "ProvisioningStatus": {
        "type": "string",
        "enum": [
          "pending",
          "in_progress",
          "completed",
          "failed",
          "cancelled"
        ],
        "title": "ProvisioningStatus",
        "description": "Provisioning status enumeration."
      },
      "ProvisioningTaskResponse": {
        "properties": {
          "service_instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Instance Id"
          },
          "task_type": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Task Type"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/ProvisioningStatus",
            "default": "pending"
          },
          "scheduled_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled Date"
          },
          "assigned_technician_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned Technician Id"
          },
          "task_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Task Data"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "default": false
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "started_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started Date"
          },
          "completed_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Date"
          },
          "result_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Result Data"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "service_instance_id",
          "task_type",
          "description",
          "id",
          "created_at",
          "updated_at",
          "tenant_id"
        ],
        "title": "ProvisioningTaskResponse",
        "description": "Schema for provisioning task responses."
      },
      "ProvisioningTaskUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProvisioningStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "scheduled_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled Date"
          },
          "assigned_technician_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned Technician Id"
          },
          "task_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Data"
          },
          "result_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "title": "ProvisioningTaskUpdate",
        "description": "Schema for updating provisioning tasks."
      },
      "Receipt": {
        "properties": {
          "payment_id": {
            "type": "string",
            "title": "Payment Id"
          },
          "receipt_number": {
            "type": "string",
            "title": "Receipt Number"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "issued_at": {
            "type": "string",
            "format": "date-time",
            "title": "Issued At"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "customer_name": {
            "type": "string",
            "title": "Customer Name"
          },
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number"
          }
        },
        "type": "object",
        "required": [
          "payment_id",
          "receipt_number",
          "id",
          "issued_at",
          "amount",
          "payment_method",
          "customer_name",
          "invoice_number"
        ],
        "title": "Receipt",
        "description": "Receipt schema."
      },
      "ReceiptCreate": {
        "properties": {
          "payment_id": {
            "type": "string",
            "title": "Payment Id"
          },
          "receipt_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Receipt Number"
          }
        },
        "type": "object",
        "required": [
          "payment_id"
        ],
        "title": "ReceiptCreate",
        "description": "Create receipt schema."
      },
      "ServiceActivationRequest": {
        "properties": {
          "customer_id": {
            "type": "string",
            "format": "uuid",
            "title": "Customer Id"
          },
          "service_plan_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Plan Id"
          },
          "service_address": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Service Address"
          },
          "service_coordinates": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Coordinates"
          },
          "contract_months": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Months"
          },
          "requested_addons": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Requested Addons"
          },
          "installation_notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Installation Notes"
          },
          "preferred_installation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Installation Date"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "service_plan_id",
          "service_address"
        ],
        "title": "ServiceActivationRequest",
        "description": "Schema for service activation requests."
      },
      "ServiceActivationResponse": {
        "properties": {
          "service_instance": {
            "$ref": "#/components/schemas/ServiceInstanceResponse"
          },
          "provisioning_task": {
            "$ref": "#/components/schemas/ProvisioningTaskResponse"
          },
          "estimated_activation": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Activation"
          },
          "total_setup_cost": {
            "type": "string",
            "title": "Total Setup Cost"
          },
          "monthly_recurring_cost": {
            "type": "string",
            "title": "Monthly Recurring Cost"
          }
        },
        "type": "object",
        "required": [
          "service_instance",
          "provisioning_task",
          "total_setup_cost",
          "monthly_recurring_cost"
        ],
        "title": "ServiceActivationResponse",
        "description": "Schema for service activation responses."
      },
      "ServiceDashboard": {
        "properties": {
          "total_services": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Services"
          },
          "active_services": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Active Services"
          },
          "pending_activations": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Pending Activations"
          },
          "suspended_services": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Suspended Services"
          },
          "cancelled_services": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Cancelled Services"
          },
          "monthly_revenue": {
            "type": "string",
            "title": "Monthly Revenue"
          },
          "avg_service_value": {
            "type": "string",
            "title": "Avg Service Value"
          },
          "churn_rate": {
            "type": "string",
            "title": "Churn Rate"
          },
          "most_popular_plans": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Most Popular Plans"
          }
        },
        "type": "object",
        "required": [
          "total_services",
          "active_services",
          "pending_activations",
          "suspended_services",
          "cancelled_services",
          "monthly_revenue",
          "avg_service_value",
          "churn_rate"
        ],
        "title": "ServiceDashboard",
        "description": "Service dashboard metrics."
      },
      "ServiceInstanceResponse": {
        "properties": {
          "service_number": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Service Number"
          },
          "customer_id": {
            "type": "string",
            "format": "uuid",
            "title": "Customer Id"
          },
          "service_plan_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Plan Id"
          },
          "status": {
            "$ref": "#/components/schemas/ServiceStatus",
            "default": "pending"
          },
          "activation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activation Date"
          },
          "suspension_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suspension Date"
          },
          "cancellation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancellation Date"
          },
          "service_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Address"
          },
          "service_coordinates": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Coordinates"
          },
          "assigned_ip": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 45
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned Ip"
          },
          "assigned_vlan": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Assigned Vlan"
          },
          "router_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Router Config"
          },
          "contract_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Start Date"
          },
          "contract_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract End Date"
          },
          "monthly_price": {
            "type": "string",
            "title": "Monthly Price"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "custom_config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Custom Config"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "default": false
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "service_number",
          "customer_id",
          "service_plan_id",
          "monthly_price",
          "id",
          "created_at",
          "updated_at",
          "tenant_id"
        ],
        "title": "ServiceInstanceResponse",
        "description": "Schema for service instance responses."
      },
      "ServiceModificationRequest": {
        "properties": {
          "new_service_plan_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Service Plan Id"
          },
          "add_addons": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Add Addons"
          },
          "remove_addons": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Remove Addons"
          },
          "change_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Address"
          },
          "modification_notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Modification Notes"
          },
          "effective_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effective Date"
          }
        },
        "type": "object",
        "title": "ServiceModificationRequest",
        "description": "Schema for service modification requests."
      },
      "ServicePerformanceMetrics": {
        "properties": {
          "service_instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Instance Id"
          },
          "avg_uptime": {
            "type": "string",
            "title": "Avg Uptime"
          },
          "avg_download_speed": {
            "type": "string",
            "title": "Avg Download Speed"
          },
          "avg_upload_speed": {
            "type": "string",
            "title": "Avg Upload Speed"
          },
          "total_data_usage": {
            "type": "string",
            "title": "Total Data Usage"
          },
          "recent_alerts": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Recent Alerts"
          },
          "last_outage": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Outage"
          },
          "customer_satisfaction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Satisfaction"
          }
        },
        "type": "object",
        "required": [
          "service_instance_id",
          "avg_uptime",
          "avg_download_speed",
          "avg_upload_speed",
          "total_data_usage",
          "recent_alerts"
        ],
        "title": "ServicePerformanceMetrics",
        "description": "Service performance metrics."
      },
      "ServicePlanCreate": {
        "properties": {
          "plan_code": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Plan Code"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "service_type": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "monthly_price": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Monthly Price"
          },
          "setup_fee": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Setup Fee",
            "default": 0
          },
          "cancellation_fee": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Cancellation Fee",
            "default": 0
          },
          "download_speed": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Speed"
          },
          "upload_speed": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Upload Speed"
          },
          "bandwidth_unit": {
            "$ref": "#/components/schemas/BandwidthUnit",
            "default": "mbps"
          },
          "data_allowance": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Allowance"
          },
          "features": {
            "additionalProperties": true,
            "type": "object",
            "title": "Features"
          },
          "technical_specs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Technical Specs"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "requires_approval": {
            "type": "boolean",
            "title": "Requires Approval",
            "default": false
          },
          "min_contract_months": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Min Contract Months",
            "default": 0
          },
          "max_contract_months": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Contract Months"
          }
        },
        "type": "object",
        "required": [
          "plan_code",
          "name",
          "service_type",
          "monthly_price"
        ],
        "title": "ServicePlanCreate",
        "description": "Schema for creating service plans."
      },
      "ServicePlanResponse": {
        "properties": {
          "plan_code": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Plan Code"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "service_type": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "monthly_price": {
            "type": "string",
            "title": "Monthly Price"
          },
          "setup_fee": {
            "type": "string",
            "title": "Setup Fee",
            "default": 0
          },
          "cancellation_fee": {
            "type": "string",
            "title": "Cancellation Fee",
            "default": 0
          },
          "download_speed": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Speed"
          },
          "upload_speed": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Upload Speed"
          },
          "bandwidth_unit": {
            "$ref": "#/components/schemas/BandwidthUnit",
            "default": "mbps"
          },
          "data_allowance": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Allowance"
          },
          "features": {
            "additionalProperties": true,
            "type": "object",
            "title": "Features"
          },
          "technical_specs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Technical Specs"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public",
            "default": true
          },
          "requires_approval": {
            "type": "boolean",
            "title": "Requires Approval",
            "default": false
          },
          "min_contract_months": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Min Contract Months",
            "default": 0
          },
          "max_contract_months": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Contract Months"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "default": false
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "plan_code",
          "name",
          "service_type",
          "monthly_price",
          "id",
          "created_at",
          "updated_at",
          "tenant_id"
        ],
        "title": "ServicePlanResponse",
        "description": "Schema for service plan responses."
      },
      "ServiceStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive",
          "pending",
          "suspended",
          "cancelled",
          "maintenance"
        ],
        "title": "ServiceStatus",
        "description": "Service status enumeration."
      },
      "ServiceType": {
        "type": "string",
        "enum": [
          "internet",
          "phone",
          "tv",
          "bundle",
          "hosting",
          "cloud",
          "managed_services"
        ],
        "title": "ServiceType",
        "description": "Service type enumeration."
      },
      "ServiceUsageResponse": {
        "properties": {
          "service_instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Instance Id"
          },
          "usage_date": {
            "type": "string",
            "format": "date",
            "title": "Usage Date"
          },
          "usage_period": {
            "type": "string",
            "pattern": "^(daily|weekly|monthly)$",
            "title": "Usage Period",
            "default": "daily"
          },
          "data_downloaded": {
            "type": "string",
            "title": "Data Downloaded",
            "default": 0
          },
          "data_uploaded": {
            "type": "string",
            "title": "Data Uploaded",
            "default": 0
          },
          "total_data": {
            "type": "string",
            "title": "Total Data",
            "default": 0
          },
          "avg_download_speed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Download Speed"
          },
          "avg_upload_speed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Upload Speed"
          },
          "peak_download_speed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Peak Download Speed"
          },
          "peak_upload_speed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Peak Upload Speed"
          },
          "uptime_percentage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uptime Percentage"
          },
          "downtime_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Downtime Minutes"
          },
          "additional_metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Additional Metrics"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "default": false
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "service_instance_id",
          "usage_date",
          "id",
          "created_at",
          "updated_at",
          "tenant_id"
        ],
        "title": "ServiceUsageResponse",
        "description": "Schema for service usage responses."
      },
      "Subscription": {
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "Customer Id"
          },
          "plan_id": {
            "type": "string",
            "title": "Plan Id"
          },
          "billing_cycle": {
            "type": "string",
            "title": "Billing Cycle"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "current_period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Current Period Start"
          },
          "current_period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Current Period End"
          },
          "trial_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trial End"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "plan_id",
          "billing_cycle",
          "amount",
          "start_date",
          "id",
          "status",
          "current_period_start",
          "current_period_end",
          "created_at",
          "updated_at"
        ],
        "title": "Subscription",
        "description": "Subscription schema."
      },
      "SubscriptionCreate": {
        "properties": {
          "customer_id": {
            "type": "string",
            "title": "Customer Id"
          },
          "plan_id": {
            "type": "string",
            "title": "Plan Id"
          },
          "billing_cycle": {
            "type": "string",
            "title": "Billing Cycle"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "USD"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "customer_id",
          "plan_id",
          "billing_cycle",
          "amount",
          "start_date"
        ],
        "title": "SubscriptionCreate",
        "description": "Create subscription schema."
      },
      "TaxRate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "rate": {
            "type": "string",
            "title": "Rate"
          },
          "tax_type": {
            "$ref": "#/components/schemas/TaxType"
          },
          "jurisdiction": {
            "type": "string",
            "title": "Jurisdiction"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "rate",
          "tax_type",
          "jurisdiction",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TaxRate",
        "description": "Tax rate schema."
      },
      "TaxRateCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "rate": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Rate"
          },
          "tax_type": {
            "$ref": "#/components/schemas/TaxType"
          },
          "jurisdiction": {
            "type": "string",
            "title": "Jurisdiction"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "rate",
          "tax_type",
          "jurisdiction"
        ],
        "title": "TaxRateCreate",
        "description": "Create tax rate schema."
      },
      "TaxType": {
        "type": "string",
        "enum": [
          "sales_tax",
          "vat",
          "gst",
          "excise"
        ],
        "title": "TaxType",
        "description": "Tax type enumeration."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
