version: '3.8'

# =============================================================================
# DotMac Management Platform - Security-Enhanced Docker Compose
# =============================================================================
# This compose file extends the base configuration with additional
# security services and hardened configurations
# =============================================================================

services:
  # Nginx Reverse Proxy with Security Headers
  nginx-proxy:
    image: nginx:1.25-alpine
    container_name: mgmt-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/security-headers.conf:/etc/nginx/conf.d/security-headers.conf:ro
      - ./config/security/certificates:/etc/ssl/certs:ro
      - ./config/security/certificates:/etc/ssl/private:ro
      - nginx_logs:/var/log/nginx
    networks:
      - mgmt-network
    depends_on:
      - mgmt-api
      - master-admin-portal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,size=100m
      - /var/run:noexec,nosuid,size=100m

  # Fail2Ban Intrusion Prevention
  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: mgmt-fail2ban
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./config/fail2ban:/data/jail.d:ro
      - nginx_logs:/var/log/nginx:ro
      - /var/log:/var/log:ro
    environment:
      - TZ=UTC
      - F2B_LOG_LEVEL=INFO
      - F2B_LOG_TARGET=STDOUT
    restart: unless-stopped

  # OpenBao with Enhanced Security
  openbao-secure:
    image: quay.io/openbao/openbao:latest
    container_name: mgmt-openbao-secure
    cap_add:
      - IPC_LOCK
    environment:
      BAO_LOCAL_CONFIG: |
        ui = true
        api_addr = "https://127.0.0.1:8200"
        cluster_addr = "https://127.0.0.1:8201"
        storage "file" {
          path = "/openbao/data"
        }
        listener "tcp" {
          address = "0.0.0.0:8200"
          tls_cert_file = "/openbao/tls/server.crt"
          tls_key_file = "/openbao/tls/server.key"
          tls_disable_client_certs = true
        }
        log_level = "INFO"
        log_format = "json"
    ports:
      - "8200:8200"
    volumes:
      - openbao_data:/openbao/data
      - ./config/security/certificates:/openbao/tls:ro
    networks:
      - mgmt-network
    healthcheck:
      test: ["CMD", "bao", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-new-privileges:true

  # PostgreSQL with Enhanced Security
  postgres-secure:
    image: postgres:15-alpine
    container_name: mgmt-postgres-secure
    environment:
      POSTGRES_USER: mgmt_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: mgmt_platform
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    secrets:
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/postgresql-security.conf:/etc/postgresql/postgresql.conf:ro
      - ./config/postgres/init-security.sql:/docker-entrypoint-initdb.d/init-security.sql:ro
      - ./config/security/certificates:/var/lib/postgresql/ssl:ro
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - mgmt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mgmt_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Redis with Authentication and SSL
  redis-secure:
    image: redis:7-alpine
    container_name: mgmt-redis-secure
    command: |
      redis-server
      --appendonly yes
      --requirepass-file /run/secrets/redis_password
      --tls-port 6380
      --tls-cert-file /tls/server.crt
      --tls-key-file /tls/server.key
      --tls-ca-cert-file /tls/server.crt
      --tls-dh-params-file /tls/dhparam.pem
      --port 0
    secrets:
      - redis_password
    volumes:
      - redis_data:/data
      - ./config/security/certificates:/tls:ro
    ports:
      - "127.0.0.1:6380:6380"
    networks:
      - mgmt-network
    healthcheck:
      test: ["CMD", "redis-cli", "--tls", "--cert", "/tls/server.crt", "--key", "/tls/server.key", "--cacert", "/tls/server.crt", "-p", "6380", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true

  # Security Monitoring with Wazuh OSSEC
  wazuh-manager:
    image: wazuh/wazuh-manager:4.7.0
    container_name: mgmt-wazuh-manager
    hostname: wazuh-manager
    restart: unless-stopped
    environment:
      - INDEXER_URL=https://wazuh-indexer:9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword
      - FILEBEAT_SSL_VERIFICATION_MODE=full
      - SSL_CERTIFICATE_AUTHORITIES=/etc/ssl/root-ca.pem
      - SSL_CERTIFICATE=/etc/ssl/filebeat.pem
      - SSL_KEY=/etc/ssl/filebeat.key
    volumes:
      - wazuh_api_configuration:/var/ossec/api/configuration
      - wazuh_etc:/var/ossec/etc
      - wazuh_logs:/var/ossec/logs
      - wazuh_queue:/var/ossec/queue
      - wazuh_var_multigroups:/var/ossec/var/multigroups
      - wazuh_integrations:/var/ossec/integrations
      - wazuh_active_response:/var/ossec/active-response/bin
      - wazuh_agentless:/var/ossec/agentless
      - wazuh_wodles:/var/ossec/wodles
      - filebeat_etc:/etc/filebeat
      - filebeat_var:/var/lib/filebeat
      - ./config/security/certificates:/etc/ssl:ro
    ports:
      - "1514:1514"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    networks:
      - mgmt-network

  # ClamAV Anti-Virus Scanner
  clamav:
    image: clamav/clamav:latest
    container_name: mgmt-clamav
    volumes:
      - clamav_db:/var/lib/clamav
      - ./uploads:/scan:ro
    networks:
      - mgmt-network
    environment:
      - CLAMAV_NO_FRESHCLAMD=false
      - CLAMAV_NO_CLAMD=false
    healthcheck:
      test: ["CMD", "clamdscan", "--version"]
      interval: 60s
      timeout: 30s
      retries: 3

  # Log Aggregation with Fluentd
  fluentd:
    image: fluent/fluentd:v1.16-debian
    container_name: mgmt-fluentd
    volumes:
      - ./config/fluentd:/fluentd/etc:ro
      - nginx_logs:/var/log/nginx:ro
      - /var/log:/var/log:ro
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - mgmt-network
    environment:
      FLUENTD_CONF: fluent.conf

  # Network Security Scanner
  nmap-scanner:
    image: instrumentisto/nmap
    container_name: mgmt-nmap-scanner
    network_mode: "host"
    volumes:
      - ./security-scans:/scans
    command: >
      sh -c "
        nmap -sS -O -oA /scans/network-scan-$$(date +%Y%m%d) localhost &&
        nmap -sV --script vuln -oA /scans/vuln-scan-$$(date +%Y%m%d) localhost
      "
    profiles:
      - security-scan

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  redis_password:
    file: ./secrets/redis_password.txt

volumes:
  nginx_logs:
    name: mgmt-nginx-logs
  wazuh_api_configuration:
    name: mgmt-wazuh-api-config
  wazuh_etc:
    name: mgmt-wazuh-etc
  wazuh_logs:
    name: mgmt-wazuh-logs
  wazuh_queue:
    name: mgmt-wazuh-queue
  wazuh_var_multigroups:
    name: mgmt-wazuh-multigroups
  wazuh_integrations:
    name: mgmt-wazuh-integrations
  wazuh_active_response:
    name: mgmt-wazuh-active-response
  wazuh_agentless:
    name: mgmt-wazuh-agentless
  wazuh_wodles:
    name: mgmt-wazuh-wodles
  filebeat_etc:
    name: mgmt-filebeat-etc
  filebeat_var:
    name: mgmt-filebeat-var
  clamav_db:
    name: mgmt-clamav-db

networks:
  mgmt-network:
    driver: bridge
    name: mgmt-network-secure
    ipam:
      config:
        - subnet: 172.20.0.0/16