version: '3.8'

# Production Docker Compose for DotMac ISP Framework
# This is for multi-server deployment with external dependencies

networks:
  dotmac_internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  dotmac_external:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  grafana_data:
    driver: local

services:
  # Core Infrastructure
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: dotmac_core
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - dotmac_internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - dotmac_internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - dotmac_internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Observability Stack
  elasticsearch:
    image: elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - dotmac_internal
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres:5432
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: ${POSTGRES_USER}
      GF_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - dotmac_internal
      - dotmac_external
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - dotmac_internal
    restart: unless-stopped

  # Core Planes
  dotmac_core_events:
    image: ${DOCKER_REGISTRY}/dotmac-core-events:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_events
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - rabbitmq
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first

  dotmac_core_ops:
    image: ${DOCKER_REGISTRY}/dotmac-core-ops:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_ops
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/1
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_core_events
    deploy:
      replicas: 2

  dotmac_identity:
    image: ${DOCKER_REGISTRY}/dotmac-identity:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_identity
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/2
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_core_events
    deploy:
      replicas: 3

  dotmac_billing:
    image: ${DOCKER_REGISTRY}/dotmac-billing:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_billing
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/3
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_core_events
    deploy:
      replicas: 2

  dotmac_services:
    image: ${DOCKER_REGISTRY}/dotmac-services:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_services
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/4
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_core_events
    deploy:
      replicas: 2

  dotmac_networking:
    image: ${DOCKER_REGISTRY}/dotmac-networking:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_networking
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/5
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
      SNMP_COMMUNITY: ${SNMP_COMMUNITY}
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_core_events
    deploy:
      replicas: 2

  dotmac_analytics:
    image: ${DOCKER_REGISTRY}/dotmac-analytics:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_analytics
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/6
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_core_events
      - elasticsearch
    deploy:
      replicas: 2

  # API Gateway
  dotmac_api_gateway:
    image: ${DOCKER_REGISTRY}/dotmac-api-gateway:${VERSION}
    environment:
      IDENTITY_SERVICE_URL: http://dotmac_identity:8000
      BILLING_SERVICE_URL: http://dotmac_billing:8000
      SERVICES_SERVICE_URL: http://dotmac_services:8000
      NETWORKING_SERVICE_URL: http://dotmac_networking:8000
      ANALYTICS_SERVICE_URL: http://dotmac_analytics:8000
      JWT_SECRET: ${JWT_SECRET}
      RATE_LIMIT_ENABLED: "true"
    networks:
      - dotmac_internal
      - dotmac_external
    ports:
      - "8080:8000"
    restart: unless-stopped
    depends_on:
      - dotmac_identity
      - dotmac_billing
      - dotmac_services
      - dotmac_networking
      - dotmac_analytics
    deploy:
      replicas: 3

  # Microservices
  communications:
    image: ${DOCKER_REGISTRY}/dotmac-communications:${VERSION}
    environment:
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
      ANALYTICS_SERVICE_URL: http://dotmac_analytics:8000
      SMTP2GO_API_KEY: ${SMTP2GO_API_KEY}
      TWILIO_SID: ${TWILIO_SID}
      TWILIO_TOKEN: ${TWILIO_TOKEN}
      ULTRAMSG_INSTANCE_ID: ${ULTRAMSG_INSTANCE_ID}
      ULTRAMSG_TOKEN: ${ULTRAMSG_TOKEN}
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_core_events
    deploy:
      replicas: 2

  crm:
    image: ${DOCKER_REGISTRY}/dotmac-crm:${VERSION}
    environment:
      IDENTITY_SERVICE_URL: http://dotmac_identity:8000
      BILLING_SERVICE_URL: http://dotmac_billing:8000
      ANALYTICS_SERVICE_URL: http://dotmac_analytics:8000
      COMMUNICATIONS_SERVICE_URL: http://communications:8000
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_identity
      - dotmac_billing
      - communications
    deploy:
      replicas: 2

  inventory_management:
    image: ${DOCKER_REGISTRY}/dotmac-inventory:${VERSION}
    environment:
      NETWORKING_SERVICE_URL: http://dotmac_networking:8000
      IDENTITY_SERVICE_URL: http://dotmac_identity:8000
      ANALYTICS_SERVICE_URL: http://dotmac_analytics:8000
      EVENTS_SERVICE_URL: http://dotmac_core_events:8000
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/dotmac_inventory
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - dotmac_networking
      - postgres
    deploy:
      replicas: 2

  customer_portal:
    image: ${DOCKER_REGISTRY}/dotmac-customer-portal:${VERSION}
    environment:
      IDENTITY_SERVICE_URL: http://dotmac_identity:8000
      BILLING_SERVICE_URL: http://dotmac_billing:8000
      SERVICES_SERVICE_URL: http://dotmac_services:8000
      NETWORKING_SERVICE_URL: http://dotmac_networking:8000
      COMMUNICATIONS_SERVICE_URL: http://communications:8000
    networks:
      - dotmac_internal
      - dotmac_external
    ports:
      - "8081:8000"
    restart: unless-stopped
    depends_on:
      - dotmac_identity
      - dotmac_billing
      - dotmac_services
    deploy:
      replicas: 3

  reseller_portal:
    image: ${DOCKER_REGISTRY}/dotmac-reseller-portal:${VERSION}
    environment:
      IDENTITY_SERVICE_URL: http://dotmac_identity:8000
      BILLING_SERVICE_URL: http://dotmac_billing:8000
      SERVICES_SERVICE_URL: http://dotmac_services:8000
      ANALYTICS_SERVICE_URL: http://dotmac_analytics:8000
      COMMUNICATIONS_SERVICE_URL: http://communications:8000
    networks:
      - dotmac_internal
      - dotmac_external
    ports:
      - "8082:8000"
    restart: unless-stopped
    depends_on:
      - dotmac_identity
      - dotmac_billing
    deploy:
      replicas: 2

  # Load Balancer
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - dotmac_external
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      - dotmac_api_gateway
      - customer_portal
      - reseller_portal

  # Backup Service
  backup_service:
    image: ${DOCKER_REGISTRY}/dotmac-backup:${VERSION}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/
      S3_BUCKET: ${BACKUP_S3_BUCKET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BACKUP_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
    volumes:
      - postgres_data:/var/lib/postgresql/data:ro
      - redis_data:/var/lib/redis/data:ro
    networks:
      - dotmac_internal
    restart: unless-stopped
    depends_on:
      - postgres
      - redis