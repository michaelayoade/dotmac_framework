version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-dotmac_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      POSTGRES_DB: dotmac_test
    ports:
      - "5438:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-dotmac_admin} -d dotmac_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [isp-api]

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6383:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [isp-api]

  isp-service:
    build:
      context: ../../
      dockerfile: Dockerfile.isp
    environment:
      ENVIRONMENT: test
      LOG_LEVEL: INFO
      DATABASE_URL: postgresql+asyncpg://dotmac_admin:${POSTGRES_PASSWORD:-password123}@postgres:5432/dotmac_test
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/1
      PORT: 8001
      HOST: 0.0.0.0
      # Optionally point to external Management API if relationship tests are required
      MANAGEMENT_PLATFORM_URL: ${MANAGEMENT_PLATFORM_URL:-}
    volumes:
      - ../../src/dotmac_isp:/app/src/dotmac_isp
      - ../../src/dotmac_shared:/app/src/dotmac_shared
      - ../../packages:/app/packages
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks: [isp-api]

networks:
  isp-api:
    driver: bridge
