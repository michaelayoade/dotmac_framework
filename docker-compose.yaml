# Coolify Docker Compose Configuration
# This file is specifically designed for Coolify deployment
# Uses SERVICE_TYPE pattern with a single image

version: '3.8'

services:
  # DB Migration Job (runs once, then exits)
  # Prevents multi-replica migration races
  db-migrate:
    image: ghcr.io/dotmac/dotmac-framework:latest
    restart: "no"  # Run once and exit
    environment:
      - SERVICE_TYPE=migration
      - DATABASE_URL=${DATABASE_URL}
      - PYTHONPATH=/app/src
      - ENVIRONMENT=production
      - STRICT_PROD_BASELINE=true
      - APPLY_RLS_AFTER_MIGRATION=true
    volumes:
      - migration_logs:/app/logs
    healthcheck:
      test: ["CMD", "test", "-f", "/app/migration_complete"]
      interval: 5s
      timeout: 3s
      retries: 12  # 1 minute max
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    command: ["/migrate.sh"]

  # ISP Service
  dotmac-isp:
    image: ghcr.io/dotmac/dotmac-framework:latest
    restart: unless-stopped
    environment:
      # Service Configuration
      - SERVICE_TYPE=isp
      
      # Production Baseline
      - ENVIRONMENT=production
      - STRICT_PROD_BASELINE=true
      - DEBUG=false
      - LOG_LEVEL=info
      
      # Database Connection (injected by Coolify)
      - DATABASE_URL=${DATABASE_URL}
      - ASYNC_DATABASE_URL=${DATABASE_URL}
      
      # Redis Connection (injected by Coolify)  
      - REDIS_URL=${REDIS_URL}
      
      # Security & Secrets
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - OPENBAO_URL=${OPENBAO_URL}
      - OPENBAO_TOKEN=${OPENBAO_TOKEN}
      
      # Row-Level Security
      - APPLY_RLS_AFTER_MIGRATION=true
      
      # API Configuration
      - API_V1_STR=/api/v1
      - CORS_ORIGINS=${CORS_ORIGINS}
      
      # ISP-specific settings
      - ISP_API_VERSION=v1
      - MAX_UPLOAD_SIZE=100MB
      - RATE_LIMIT_PER_MINUTE=1000
      
      # Observability
      - OPENTELEMETRY_SERVICE_NAME=dotmac-isp
      - ENABLE_METRICS=true
      - ENABLE_TRACING=true
      
    ports:
      - "8000:8000"
    
    volumes:
      - isp_logs:/app/logs
      - isp_uploads:/app/uploads
      - isp_temp:/app/temp
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    depends_on:
      db-migrate:
        condition: service_completed_successfully
    
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Management Service
  dotmac-management:
    image: ghcr.io/dotmac/dotmac-framework:latest
    restart: unless-stopped
    environment:
      # Service Configuration
      - SERVICE_TYPE=management
      
      # Production Baseline
      - ENVIRONMENT=production
      - STRICT_PROD_BASELINE=true
      - DEBUG=false
      - LOG_LEVEL=info
      
      # Database Connection (injected by Coolify)
      - DATABASE_URL=${DATABASE_URL}
      - ASYNC_DATABASE_URL=${DATABASE_URL}
      - MANAGEMENT_DATABASE_URL=${DATABASE_URL}
      
      # Redis Connection (injected by Coolify)
      - REDIS_URL=${REDIS_URL}
      
      # Security & Secrets
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - OPENBAO_URL=${OPENBAO_URL}
      - OPENBAO_TOKEN=${OPENBAO_TOKEN}
      
      # Row-Level Security
      - APPLY_RLS_AFTER_MIGRATION=true
      
      # API Configuration
      - API_V1_STR=/api/v1
      - CORS_ORIGINS=${CORS_ORIGINS}
      
      # SaaS Platform
      - CONTAINER_ORCHESTRATION_ENABLED=true
      - TENANT_ISOLATION_ENABLED=true
      
      # Management-specific settings
      - MANAGEMENT_API_VERSION=v1
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      
      # Production Optimizations
      - WEB_CONCURRENCY=4
      - MAX_WORKERS=4
      - KEEPALIVE=2
      - GRACEFUL_TIMEOUT=30
      
      # Observability
      - OPENTELEMETRY_SERVICE_NAME=dotmac-management
      - ENABLE_METRICS=true
      - ENABLE_TRACING=true
      - ENABLE_DEBUG_LOGS=false
      
    ports:
      - "8001:8001"
    
    volumes:
      - management_logs:/app/logs
      - management_uploads:/app/uploads
      - management_temp:/app/temp
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    depends_on:
      db-migrate:
        condition: service_completed_successfully
    
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

volumes:
  migration_logs:
  isp_logs:
  isp_uploads:
  isp_temp:
  management_logs:
  management_uploads:
  management_temp: