# DEPRECATED: This configuration is superseded by the root pyproject.toml
#
# This file is kept for historical reference only.
# All dependencies and configurations are now managed via the root pyproject.toml
#
# To install the framework, use from the root directory:
# pip install -e .
#
# See PACKAGING_GUIDE.md for complete installation instructions.

[tool.poetry]
name = "dotmac-shared-services"
version = "1.0.0"
description = "DEPRECATED: Use root pyproject.toml instead"
authors = ["DotMac Framework Team <dev@dotmac.dev>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
# Core dependencies shared across all services
fastapi = "^0.104.0"
pydantic = "^2.4.0"
redis = "^5.0.0"
aioredis = "^2.0.0"

# Cache service dependencies
hiredis = "^2.2.0"

# Auth service dependencies
pyjwt = {extras = ["crypto"], version = "^2.8.0"}
bcrypt = "^4.0.0"
python-multipart = "^0.0.6"
qrcode = {extras = ["pil"], version = "^7.4.2"}
cryptography = "^41.0.0"

# File service dependencies
reportlab = "^4.0.0"
jinja2 = "^3.1.2"
openpyxl = "^3.1.0"
pillow = "^10.0.0"
boto3 = "^1.28.0"
weasyprint = {version = "^59.0", optional = true}

# WebSocket service dependencies
websockets = "^12.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}

# Billing service dependencies
stripe = "^6.0.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.0"}
alembic = "^1.12.0"

# Observability service dependencies
structlog = "^23.0.0"
prometheus-client = "^0.19.0"
psutil = "^5.9.0"
aiohttp = "^3.9.0"

# OpenTelemetry dependencies (optional for SignOz integration)
opentelemetry-api = {version = "^1.20.0", optional = true}
opentelemetry-sdk = {version = "^1.20.0", optional = true}
opentelemetry-exporter-otlp = {version = "^1.20.0", optional = true}
opentelemetry-instrumentation-fastapi = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-sqlalchemy = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-redis = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-requests = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-httpx = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-psycopg2 = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-urllib3 = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-asyncio = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-system-metrics = {version = "^0.41b0", optional = true}

# Development dependencies
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"

[tool.poetry.extras]
pdf-advanced = ["weasyprint"]
observability-full = [
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-sqlalchemy",
    "opentelemetry-instrumentation-redis",
    "opentelemetry-instrumentation-requests",
    "opentelemetry-instrumentation-httpx",
    "opentelemetry-instrumentation-psycopg2",
    "opentelemetry-instrumentation-urllib3",
    "opentelemetry-instrumentation-asyncio",
    "opentelemetry-instrumentation-system-metrics"
]
all = [
    "weasyprint",
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-sqlalchemy",
    "opentelemetry-instrumentation-redis",
    "opentelemetry-instrumentation-requests",
    "opentelemetry-instrumentation-httpx",
    "opentelemetry-instrumentation-psycopg2",
    "opentelemetry-instrumentation-urllib3",
    "opentelemetry-instrumentation-asyncio",
    "opentelemetry-instrumentation-system-metrics"
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"
httpx = "^0.24.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "reportlab.*",
    "weasyprint.*",
    "stripe.*",
    "prometheus_client.*",
    "psutil.*",
    "opentelemetry.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
    "dotmac_shared/*/tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["dotmac_shared"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
