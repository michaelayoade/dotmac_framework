[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "dotmac-auth-service"
version = "1.0.0"
description = "Secure authentication and authorization service for DotMac framework"
readme = "README.md"
authors = [
    {name = "DotMac Framework Team", email = "dev@dotmac.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"

dependencies = [
    # JWT and cryptography
    "pyjwt[crypto]>=2.8.0",        # JWT token handling with cryptographic support
    "cryptography>=41.0.0",         # Crypto operations for RS256 keys
    "passlib[bcrypt]>=1.7.4",      # Password hashing with bcrypt
    "bcrypt>=4.0.0",               # Bcrypt hashing algorithm

    # Multi-factor authentication
    "pyotp>=2.9.0",                # TOTP (Time-based OTP) generation
    "qrcode[pil]>=7.4.2",         # QR code generation for TOTP setup

    # FastAPI integration
    "fastapi>=0.104.0",            # Web framework integration
    "starlette>=0.27.0",           # ASGI middleware support

    # Database and caching
    "redis>=5.0.0",                # Session storage and rate limiting
    "sqlalchemy>=2.0.0",          # Database ORM integration

    # Security and validation
    "pydantic>=2.5.0",            # Data validation and settings
    "email-validator>=2.1.0",     # Email validation
    "python-multipart>=0.0.6",    # Form data parsing

    # Utilities
    "python-dateutil>=2.8.0",     # Date/time utilities
    "typing-extensions>=4.8.0",    # Type hints support
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",              # Async HTTP client for testing

    # Code quality
    "black>=23.9.0",              # Code formatting
    "isort>=5.12.0",              # Import sorting
    "flake8>=6.1.0",              # Linting
    "mypy>=1.6.0",                # Type checking
    "bandit>=1.7.5",              # Security linting

    # Documentation
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
]

ldap = [
    "python-ldap>=3.4.0",         # LDAP authentication provider
]

oauth = [
    "authlib>=1.2.1",             # OAuth2/OIDC provider
    "httpx>=0.25.0",              # HTTP client for OAuth
]

monitoring = [
    "prometheus-client>=0.18.0",   # Metrics collection
    "structlog>=23.2.0",          # Structured logging
]

all = [
    "dotmac-auth-service[dev,ldap,oauth,monitoring]"
]

[project.urls]
Homepage = "https://github.com/dotmac-framework/auth-service"
Documentation = "https://docs.dotmac-framework.com/auth-service"
Repository = "https://github.com/dotmac-framework/auth-service.git"
Issues = "https://github.com/dotmac-framework/auth-service/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["dotmac_shared.auth*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dotmac_shared.auth",
    "--cov-report=term-missing",
    "--cov-report=html:coverage",
    "--cov-report=xml",
    "--cov-fail-under=90",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "security: Security tests",
    "performance: Performance tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["dotmac_shared/auth"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["dotmac_shared"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "pyotp.*",
    "qrcode.*",
    "passlib.*",
    "bcrypt.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "docs"]
tests = ["B201", "B301", "B302", "B303", "B304", "B305", "B306", "B307", "B308", "B309", "B310", "B311", "B312", "B313", "B314", "B315", "B316", "B317", "B318", "B319", "B320", "B321", "B322", "B323", "B324", "B325", "B601", "B602", "B603", "B604", "B605", "B606", "B607", "B608", "B609", "B610", "B611", "B701", "B702", "B703"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection in tests
