[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-websocket-service"
version = "1.0.0"
description = "Production-ready WebSocket service with multi-tenant support, real-time events, and horizontal scaling"
authors = [
    {name = "DotMac Framework Team", email = "dev@dotmac.dev"}
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["websocket", "real-time", "multi-tenant", "scaling", "microservices"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "websockets>=12.0",
    "redis>=5.0.0",
    "pydantic>=2.4.0",
    "uvicorn>=0.24.0",
    "python-json-logger>=2.0.7",
    "tenacity>=8.2.3",
    "asyncio-throttle>=1.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "pre-commit>=3.4.0",
]
testing = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "coverage>=7.3.0",
    "factory-boy>=3.3.0",
]
production = [
    "prometheus-client>=0.18.0",
    "structlog>=23.1.0",
    "sentry-sdk>=1.32.0",
]

[project.urls]
Homepage = "https://github.com/dotmac-framework/websocket-service"
Documentation = "https://docs.dotmac.dev/websocket"
Repository = "https://github.com/dotmac-framework/websocket-service"
"Bug Tracker" = "https://github.com/dotmac-framework/websocket-service/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["dotmac_shared.websockets*"]

[tool.setuptools.package-data]
"dotmac_shared.websockets" = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dotmac_shared.websockets",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "security: Security tests",
]

[tool.coverage.run]
source = ["dotmac_shared/websockets"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
