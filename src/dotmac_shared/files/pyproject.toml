[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-file-service"
version = "1.0.0"
description = "DotMac File Generation and Document Processing Service"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "DotMac Team", email = "dev@dotmac.com"},
]
keywords = ["pdf", "excel", "template", "file-generation", "document-processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business",
    "Topic :: Text Processing",
]

dependencies = [
    # Core dependencies
    "reportlab>=4.0.0",
    "jinja2>=3.1.0",
    "openpyxl>=3.1.0",
    "pillow>=10.0.0",
    "matplotlib>=3.7.0",
    "qrcode[pil]>=7.4.0",

    # Data processing
    "pandas>=2.0.0",
    "xlsxwriter>=3.1.0",

    # Cloud storage
    "boto3>=1.28.0",
    "azure-storage-blob>=12.17.0",
    "google-cloud-storage>=2.10.0",

    # Async support
    "aiofiles>=23.0.0",
    "celery>=5.3.0",

    # FastAPI integration
    "fastapi>=0.100.0",
    "pydantic>=2.0.0",

    # Utilities
    "python-multipart>=0.0.6",
    "python-magic>=0.4.27",
    "bleach>=6.0.0",
    "validators>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "faker>=19.0.0",
    "factory-boy>=3.3.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

performance = [
    "lxml>=4.9.0",  # Faster XML processing
    "xlsxwriter>=3.1.0",  # Faster Excel writing
    "cairosvg>=2.7.0",  # SVG support
]

[project.urls]
Homepage = "https://github.com/dotmac/file-service"
Documentation = "https://docs.dotmac.com/file-service"
Repository = "https://github.com/dotmac/file-service"
Issues = "https://github.com/dotmac/file-service/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["dotmac_files*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["dotmac_files"]
known_third_party = ["reportlab", "jinja2", "openpyxl", "pandas", "matplotlib", "qrcode", "PIL"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_context = true

[[tool.mypy.overrides]]
module = [
    "reportlab.*",
    "matplotlib.*",
    "qrcode.*",
    "pandas.*",
    "openpyxl.*",
    "xlsxwriter.*",
    "boto3.*",
    "azure.*",
    "google.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
    -ra
    --strict-markers
    --strict-config
    --cov=dotmac_files
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=85
"""
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "pdf: marks tests related to PDF generation",
    "excel: marks tests related to Excel generation",
    "templates: marks tests related to template processing",
    "storage: marks tests related to file storage",
    "async: marks tests as async tests",
]

[tool.coverage.run]
source = ["dotmac_files"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
