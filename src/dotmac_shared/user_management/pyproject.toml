[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dotmac-user-management"
description = "Unified user management service for DotMac Framework"
authors = [
    {name = "DotMac Framework Team", email = "dev@dotmac.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = ["user-management", "authentication", "rbac", "multi-tenant"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration :: Authentication/Directory",
    "Topic :: Internet :: WWW/HTTP :: Session",
]
dynamic = ["version"]

# Core dependencies
dependencies = [
    "pydantic>=2.0.0,<3.0.0",
    "sqlalchemy>=2.0.0,<3.0.0",
    "asyncpg>=0.28.0,<1.0.0",
    "passlib[bcrypt]>=1.7.0,<2.0.0",
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "email-validator>=2.0.0,<3.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "structlog>=23.0.0,<24.0.0",
]

# Optional dependencies for specific features
[project.optional-dependencies]
# Events integration
events = [
    "redis>=4.5.0,<6.0.0",
    "kafka-python>=2.0.0,<3.0.0",
]

# Cache integration
cache = [
    "redis>=4.5.0,<6.0.0",
    "python-memcached>=1.59,<2.0.0",
]

# Notifications integration
notifications = [
    "twilio>=8.0.0,<9.0.0",
    "sendgrid>=6.10.0,<7.0.0",
    "boto3>=1.26.0,<2.0.0",  # For AWS SES
]

# Observability integration
observability = [
    "prometheus-client>=0.17.0,<1.0.0",
    "opentelemetry-api>=1.20.0,<2.0.0",
    "opentelemetry-sdk>=1.20.0,<2.0.0",
]

# ISP Framework integration
isp = [
    "geoip2>=4.7.0,<5.0.0",
    "netaddr>=0.8.0,<1.0.0",
]

# Management Platform integration
platform = [
    "kubernetes>=27.2.0,<28.0.0",
    "docker>=6.1.0,<7.0.0",
]

# Development dependencies
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "black>=23.7.0,<24.0.0",
    "ruff>=0.0.280,<1.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pre-commit>=3.3.0,<4.0.0",
    "sphinx>=7.1.0,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
]

# All optional dependencies for complete installation
all = [
    "dotmac-user-management[events,cache,notifications,observability,isp,platform]"
]

# Test dependencies (includes dev)
test = [
    "dotmac-user-management[dev]",
    "pytest-xdist>=3.3.0,<4.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.3.0,<20.0.0",
    "httpx>=0.24.0,<1.0.0",
    "respx>=0.20.0,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/dotmac-framework/dotmac-framework"
Repository = "https://github.com/dotmac-framework/dotmac-framework"
Documentation = "https://docs.dotmac.com/user-management"
Changelog = "https://github.com/dotmac-framework/dotmac-framework/blob/main/src/dotmac_shared/user_management/CHANGELOG.md"
"Bug Tracker" = "https://github.com/dotmac-framework/dotmac-framework/issues"

[project.entry-points."dotmac.adapters"]
isp_user = "dotmac_shared.user_management.adapters:ISPUserAdapter"
management_platform_user = "dotmac_shared.user_management.adapters:ManagementPlatformUserAdapter"

[project.entry-points."dotmac.services"]
user_lifecycle = "dotmac_shared.user_management.core:UserLifecycleService"
profile_manager = "dotmac_shared.user_management.core:ProfileManager"
permission_manager = "dotmac_shared.user_management.core:PermissionManager"

# Setuptools configuration
[tool.setuptools]
packages = ["dotmac_shared.user_management"]
include-package-data = true

[tool.setuptools.package-dir]
"" = "."

[tool.setuptools_scm]
write_to = "dotmac_shared/user_management/_version.py"
version_scheme = "post-release"
local_scheme = "no-local-version"

# Development tools configuration
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B006",  # do not use mutable data structures for argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/*" = ["ARG", "SIM"]  # Less strict for tests

[tool.ruff.isort]
known-first-party = ["dotmac_shared"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "passlib.*",
    "jose.*",
    "redis.*",
    "kafka.*",
    "twilio.*",
    "sendgrid.*",
    "boto3.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "auth: marks tests related to authentication",
    "permissions: marks tests related to permissions and RBAC",
    "profile: marks tests related to user profiles",
    "events: marks tests related to event publishing",
    "cache: marks tests related to caching",
    "notifications: marks tests related to notifications",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["dotmac_shared.user_management"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/_version.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
