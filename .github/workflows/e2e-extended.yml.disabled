name: ARCHIVED - Extended E2E

on:
  workflow_dispatch:

jobs:
  e2e-services-and-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Playwright browsers
        working-directory: frontend
        run: |
          npm -v
          npx playwright install --with-deps

      - name: Start Notification Test Stack (removed)
        run: |
          echo "Notification tester stack removed; configure your own if needed."

      - name: Wait for Notification Services
        run: |
          timeout 120 bash -c 'until curl -sf http://localhost:8025/; do sleep 2; done'
          timeout 120 bash -c 'until curl -sf http://localhost:3030/health; do sleep 2; done'
          timeout 120 bash -c 'until curl -sf http://localhost:8080/health; do sleep 2; done'

      - name: Start File Storage Test Stack (removed)
        run: |
          echo "File storage tester stack removed; configure your own if needed."

      - name: Wait for File Storage Services
        run: |
          timeout 180 bash -c 'until curl -sf http://localhost:9000/minio/health/live; do sleep 3; done'
          timeout 180 bash -c 'until curl -sf http://localhost:8081/health; do sleep 3; done'

      - name: Run Notification Tester (removed)
        run: |
          echo "Notification tester removed."

      - name: Run File Storage Tester (removed)
        run: |
          echo "File storage tester removed."

      - name: Run Mocked SSO Playwright Suite
        working-directory: frontend
        run: |
          npx playwright test -c tests/sso-playwright.config.ts --reporter=list

      - name: Run Payments Edge Cases Suite
        working-directory: frontend
        run: |
          npx playwright test -c tests/payments-playwright.config.ts --reporter=list

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.lock || pip install -r requirements.txt

      - name: Run Python E2E tests
        env:
          PYTHONPATH: src
        run: |
          python -m pytest -m "e2e" -v --tb=short

      - name: Tear down services (none)
        if: always()
        run: |
          echo "No external tester services to tear down."
