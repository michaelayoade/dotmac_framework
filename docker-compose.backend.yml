version: '3.8'

networks:
  dotmac-backend:
    driver: bridge
  dotmac-frontend:
    driver: bridge

volumes:
  postgres_data:
  redis_data:

services:
  # Core Infrastructure
  postgres:
    image: postgres:16-alpine
    container_name: dotmac-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dotmac_platform
      POSTGRES_USER: dotmac
      POSTGRES_PASSWORD: dotmac_secure_password
      POSTGRES_MULTIPLE_DATABASES: "dotmac_platform,dotmac_events,dotmac_billing,dotmac_identity,dotmac_networking,dotmac_analytics,dotmac_services,openwisp_radius"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
    networks:
      - dotmac-backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dotmac -d dotmac_platform"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: dotmac-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - dotmac-backend
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build: 
      context: ./dotmac_api_gateway
      dockerfile: Dockerfile
    container_name: dotmac-api-gateway
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_platform
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    networks:
      - dotmac-backend
      - dotmac-frontend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Platform Service
  platform:
    build:
      context: ./dotmac_platform
      dockerfile: Dockerfile.prod
    container_name: dotmac-platform
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_platform
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - AUTH_SECRET_KEY=your-secret-key-change-in-production
    ports:
      - "8001:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Core Events Service
  core-events:
    build:
      context: ./dotmac_core_events
      dockerfile: Dockerfile
    container_name: dotmac-core-events
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_events
      - REDIS_URL=redis://redis:6379/1
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8002:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Core Ops Service
  core-ops:
    build:
      context: ./dotmac_core_ops
      dockerfile: Dockerfile
    container_name: dotmac-core-ops
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_platform
      - REDIS_URL=redis://redis:6379/2
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8003:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Identity Service
  identity:
    build:
      context: ./dotmac_identity
      dockerfile: Dockerfile
    container_name: dotmac-identity
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_identity
      - REDIS_URL=redis://redis:6379/3
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8004:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Billing Service
  billing:
    build:
      context: ./dotmac_billing
      dockerfile: Dockerfile
    container_name: dotmac-billing
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_billing
      - REDIS_URL=redis://redis:6379/4
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8005:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # DotMac Networking Service (Complete ISP Management Platform)
  networking:
    build:
      context: ./dotmac_networking
      dockerfile: Dockerfile
    container_name: dotmac-networking
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_networking
      - REDIS_URL=redis://redis:6379/5
      - FREERADIUS_HOST=freeradius
      - FREERADIUS_AUTH_PORT=1812
      - FREERADIUS_ACCT_PORT=1813
      - FREERADIUS_COA_PORT=3799
      - FREERADIUS_SECRET=dotmac-radius-secret
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8006:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      freeradius:
        condition: service_healthy

  # Analytics Service
  analytics:
    build:
      context: ./dotmac_analytics
      dockerfile: Dockerfile
    container_name: dotmac-analytics
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_analytics
      - REDIS_URL=redis://redis:6379/6
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8007:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Services Management
  services:
    build:
      context: ./dotmac_services
      dockerfile: Dockerfile
    container_name: dotmac-services
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_services
      - REDIS_URL=redis://redis:6379/7
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8008:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # DevTools Service
  devtools:
    build:
      context: ./dotmac_devtools
      dockerfile: Dockerfile
    container_name: dotmac-devtools
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://dotmac:dotmac_secure_password@postgres:5432/dotmac_platform
      - REDIS_URL=redis://redis:6379/8
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8009:8000"
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Clean FreeRADIUS Server
  freeradius:
    image: freeradius/freeradius-server:latest
    container_name: dotmac-freeradius
    restart: unless-stopped
    environment:
      - RADIUS_DB_HOST=postgres
      - RADIUS_DB_PORT=5432
      - RADIUS_DB_NAME=dotmac_networking
      - RADIUS_DB_USER=dotmac
      - RADIUS_DB_PASSWORD=dotmac_secure_password
    ports:
      - "1812:1812/udp"  # RADIUS Authentication
      - "1813:1813/udp"  # RADIUS Accounting
      - "3799:3799/udp"  # RADIUS CoA (Change of Authorization)
    networks:
      - dotmac-backend
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./config/freeradius/clients.conf:/etc/freeradius/3.0/clients.conf:ro
      - ./config/freeradius/mods-enabled/sql:/etc/freeradius/3.0/mods-enabled/sql:ro
      - ./config/freeradius/sql.conf:/etc/freeradius/3.0/mods-config/sql/main/postgresql/schema.sql:ro
    healthcheck:
      test: ["CMD", "radtest", "test", "test", "localhost", "1812", "testing123"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Contract Publishing Service (Prism Mock Server)
  contracts:
    image: stoplight/prism:latest
    container_name: dotmac-contracts
    command: mock -h 0.0.0.0 -p 4010 /contracts/openapi.yaml
    volumes:
      - ./dotmac_platform/tests/fixtures/openapi.yaml:/contracts/openapi.yaml:ro
    networks:
      - dotmac-frontend
    ports:
      - "4010:4010"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4010/health"]
      interval: 30s
      timeout: 5s
      retries: 3
