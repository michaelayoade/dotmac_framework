version: '3.8'

services:
  # Database with test data seeding
  postgres-e2e:
    image: postgres:14
    container_name: postgres-e2e-${CI_JOB_ID:-local}
    environment:
      POSTGRES_DB: dotmac_test_${CI_JOB_ID:-local}
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./test-data/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./test-data/seed-${TEST_STAGE:-smoke}.sql:/docker-entrypoint-initdb.d/02-seed.sql:ro
      - postgres_e2e_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d dotmac_test_${CI_JOB_ID:-local}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Redis for caching/sessions
  redis-e2e:
    image: redis:7-alpine
    container_name: redis-e2e-${CI_JOB_ID:-local}
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_e2e_data:/data
    ports:
      - "${REDIS_PORT:-6380}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  # Message queue for background tasks
  rabbitmq-e2e:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-e2e-${CI_JOB_ID:-local}
    environment:
      RABBITMQ_DEFAULT_USER: test_user
      RABBITMQ_DEFAULT_PASS: test_pass
      RABBITMQ_DEFAULT_VHOST: dotmac_test
    volumes:
      - rabbitmq_e2e_data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PORT:-5673}:5672"
      - "${RABBITMQ_MGMT_PORT:-15673}:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    restart: unless-stopped

  # Tenant ISP Backend
  dotmac-isp-e2e:
    image: dotmac-isp:${GITHUB_SHA:-latest}
    container_name: dotmac-isp-e2e-${CI_JOB_ID:-local}
    environment:
      # Core Configuration
      TENANT_ID: "e2e-test-${CI_JOB_ID:-local}"
      ENVIRONMENT: "test"
      DEBUG: "true"
      LOG_LEVEL: "DEBUG"
      PYTHONPATH: "/app/src:/app/shared"
      
      # Database
      DATABASE_URL: "postgresql+asyncpg://test_user:test_pass@postgres-e2e:5432/dotmac_test_${CI_JOB_ID:-local}"
      DATABASE_SCHEMA: "public"
      
      # Redis
      REDIS_URL: "redis://redis-e2e:6379/0"
      REDIS_NAMESPACE: "e2e:${CI_JOB_ID:-local}:"
      
      # Message Queue
      CELERY_BROKER_URL: "pyamqp://test_user:test_pass@rabbitmq-e2e:5672/dotmac_test"
      CELERY_RESULT_BACKEND: "redis://redis-e2e:6379/1"
      
      # Security
      JWT_SECRET_KEY: "test-secret-key-for-e2e-only"
      CORS_ORIGINS: '["http://localhost:3001", "http://localhost:3002", "http://localhost:3003"]'
      
      # Features
      ENABLE_TEST_ENDPOINTS: "true"
      ENABLE_MOCK_PAYMENTS: "true"
      ENABLE_MOCK_NOTIFICATIONS: "true"
      SKIP_EMAIL_VERIFICATION: "true"
      
      # File Storage (Local for testing)
      FILE_STORAGE_BACKEND: "local"
      FILE_STORAGE_PATH: "/app/test-uploads"
      
      # External Service Mocks
      STRIPE_PUBLISHABLE_KEY: "pk_test_mock"
      STRIPE_SECRET_KEY: "sk_test_mock"
      STRIPE_WEBHOOK_SECRET: "whsec_test_mock"
      
      # Observability
      OTEL_RESOURCE_ATTRIBUTES: "service.name=dotmac-isp-e2e,tenant.id=e2e-test-${CI_JOB_ID:-local}"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger-e2e:14268"
      
    volumes:
      - test_uploads:/app/test-uploads
      - test_logs:/app/logs
      - ../src:/app/src:ro
      - ../shared:/app/shared:ro
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres-e2e:
        condition: service_healthy
      redis-e2e:
        condition: service_healthy
      rabbitmq-e2e:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped

  # Celery Worker for Background Tasks
  celery-worker-e2e:
    image: dotmac-isp:${GITHUB_SHA:-latest}
    container_name: celery-worker-e2e-${CI_JOB_ID:-local}
    environment:
      TENANT_ID: "e2e-test-${CI_JOB_ID:-local}"
      DATABASE_URL: "postgresql+asyncpg://test_user:test_pass@postgres-e2e:5432/dotmac_test_${CI_JOB_ID:-local}"
      REDIS_URL: "redis://redis-e2e:6379/0"
      CELERY_BROKER_URL: "pyamqp://test_user:test_pass@rabbitmq-e2e:5672/dotmac_test"
      CELERY_RESULT_BACKEND: "redis://redis-e2e:6379/1"
      PYTHONPATH: "/app/src:/app/shared"
      ENABLE_MOCK_NOTIFICATIONS: "true"
    volumes:
      - test_logs:/app/logs
      - ../src:/app/src:ro
      - ../shared:/app/shared:ro
    depends_on:
      - dotmac-isp-e2e
    command: ["celery", "-A", "dotmac_isp.core.celery_app", "worker", "--loglevel=info", "--concurrency=2"]
    restart: unless-stopped

  # Admin Frontend
  frontend-admin-e2e:
    image: dotmac-frontend-admin:${GITHUB_SHA:-latest}
    container_name: frontend-admin-e2e-${CI_JOB_ID:-local}
    environment:
      NEXT_PUBLIC_API_URL: "http://dotmac-isp-e2e:8000"
      NEXT_PUBLIC_WS_URL: "ws://dotmac-isp-e2e:8000/ws"
      NODE_ENV: "test"
      NEXT_TELEMETRY_DISABLED: "1"
    ports:
      - "${ADMIN_PORT:-3001}:3000"
    depends_on:
      - dotmac-isp-e2e
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Customer Frontend
  frontend-customer-e2e:
    image: dotmac-frontend-customer:${GITHUB_SHA:-latest}
    container_name: frontend-customer-e2e-${CI_JOB_ID:-local}
    environment:
      NEXT_PUBLIC_API_URL: "http://dotmac-isp-e2e:8000"
      NEXT_PUBLIC_WS_URL: "ws://dotmac-isp-e2e:8000/ws"
      NODE_ENV: "test"
      NEXT_TELEMETRY_DISABLED: "1"
    ports:
      - "${CUSTOMER_PORT:-3002}:3000"
    depends_on:
      - dotmac-isp-e2e
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Reseller Frontend
  frontend-reseller-e2e:
    image: dotmac-frontend-reseller:${GITHUB_SHA:-latest}
    container_name: frontend-reseller-e2e-${CI_JOB_ID:-local}
    environment:
      NEXT_PUBLIC_API_URL: "http://dotmac-isp-e2e:8000"
      NODE_ENV: "test"
      NEXT_TELEMETRY_DISABLED: "1"
    ports:
      - "${RESELLER_PORT:-3003}:3000"
    depends_on:
      - dotmac-isp-e2e
    profiles: ["reseller"]
    restart: unless-stopped

  # Mock External Services
  stripe-mock:
    image: stripemock/stripe-mock:latest
    container_name: stripe-mock-${CI_JOB_ID:-local}
    ports:
      - "${STRIPE_MOCK_PORT:-12111}:12111"
    command: ["-http-port", "12111"]
    profiles: ["payments"]
    restart: unless-stopped

  # MinIO for file storage testing
  minio-e2e:
    image: minio/minio:latest
    container_name: minio-e2e-${CI_JOB_ID:-local}
    environment:
      MINIO_ROOT_USER: testuser
      MINIO_ROOT_PASSWORD: testpass123
    volumes:
      - minio_e2e_data:/data
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    command: server /data --console-address ":9001"
    profiles: ["files"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Jaeger for distributed tracing
  jaeger-e2e:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-e2e-${CI_JOB_ID:-local}
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "${JAEGER_UI_PORT:-16686}:16686"
      - "${JAEGER_COLLECTOR_PORT:-14268}:14268"
    profiles: ["observability"]
    restart: unless-stopped

  # Test utilities container
  test-utilities:
    image: dotmac-test-utils:latest
    container_name: test-utilities-${CI_JOB_ID:-local}
    environment:
      DATABASE_URL: "postgresql://test_user:test_pass@postgres-e2e:5432/dotmac_test_${CI_JOB_ID:-local}"
      REDIS_URL: "redis://redis-e2e:6379/0"
      API_URL: "http://dotmac-isp-e2e:8000"
      ADMIN_URL: "http://frontend-admin-e2e:3000"
      CUSTOMER_URL: "http://frontend-customer-e2e:3000"
    volumes:
      - ./test-scripts:/scripts:ro
      - test_artifacts:/artifacts
      - test_data_exports:/exports
    depends_on:
      postgres-e2e:
        condition: service_healthy
      redis-e2e:
        condition: service_healthy
      dotmac-isp-e2e:
        condition: service_healthy
    profiles: ["utilities"]
    command: ["tail", "-f", "/dev/null"]  # Keep running for manual commands
    restart: unless-stopped

  # Mailhog for email testing
  mailhog-e2e:
    image: mailhog/mailhog:latest
    container_name: mailhog-e2e-${CI_JOB_ID:-local}
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_UI_PORT:-8025}:8025"
    profiles: ["email"]
    restart: unless-stopped

volumes:
  postgres_e2e_data:
    name: postgres-e2e-data-${CI_JOB_ID:-local}
  redis_e2e_data:
    name: redis-e2e-data-${CI_JOB_ID:-local}
  rabbitmq_e2e_data:
    name: rabbitmq-e2e-data-${CI_JOB_ID:-local}
  minio_e2e_data:
    name: minio-e2e-data-${CI_JOB_ID:-local}
  test_uploads:
    name: test-uploads-${CI_JOB_ID:-local}
  test_logs:
    name: test-logs-${CI_JOB_ID:-local}
  test_artifacts:
    name: test-artifacts-${CI_JOB_ID:-local}
  test_data_exports:
    name: test-data-exports-${CI_JOB_ID:-local}

networks:
  default:
    name: e2e-network-${CI_JOB_ID:-local}
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16