{"version":3,"sources":["/home/dotmac_framework/frontend/apps/tenant-portal/src/__tests__/setup.ts"],"sourcesContent":["/**\n * Jest Test Setup\n * Global test configuration and environment setup\n */\n\nimport '@testing-library/jest-dom';\nimport 'jest-canvas-mock';\nimport React from 'react';\n\n// Mock Next.js router\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      replace: jest.fn(),\n      prefetch: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      refresh: jest.fn(),\n    };\n  },\n  usePathname() {\n    return '/dashboard';\n  },\n  useSearchParams() {\n    return new URLSearchParams();\n  },\n}));\n\n// Mock Next.js image component\njest.mock('next/image', () => ({\n  __esModule: true,\n  default: ({ src, alt, ...props }: any) => {\n    return React.createElement('img', { src, alt, ...props });\n  },\n}));\n\n// Mock Next.js link component\njest.mock('next/link', () => ({\n  __esModule: true,\n  default: ({ children, href, ...props }: any) => {\n    return React.createElement('a', { href, ...props }, children);\n  },\n}));\n\n// Mock fetch API\nconst mockFetch = jest.fn();\nglobal.fetch = mockFetch;\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Mock IntersectionObserver\nconst mockIntersectionObserver = jest.fn();\nmockIntersectionObserver.mockReturnValue({\n  observe: () => null,\n  unobserve: () => null,\n  disconnect: () => null,\n});\nwindow.IntersectionObserver = mockIntersectionObserver;\n\n// Mock ResizeObserver\nconst mockResizeObserver = jest.fn();\nmockResizeObserver.mockReturnValue({\n  observe: () => null,\n  unobserve: () => null,\n  disconnect: () => null,\n});\nwindow.ResizeObserver = mockResizeObserver;\n\n// Mock console methods for cleaner test output\nconst originalError = console.error;\nconst originalWarn = console.warn;\n\nbeforeAll(() => {\n  console.error = (...args: any[]) => {\n    if (\n      typeof args[0] === 'string' &&\n      (\n        args[0].includes('Warning: ReactDOM.render is no longer supported') ||\n        args[0].includes('Warning: Each child in a list should have a unique \"key\" prop') ||\n        args[0].includes('act(...) is not supported in production builds')\n      )\n    ) {\n      return;\n    }\n    originalError.call(console, ...args);\n  };\n\n  console.warn = (...args: any[]) => {\n    if (\n      typeof args[0] === 'string' &&\n      (\n        args[0].includes('componentWillReceiveProps') ||\n        args[0].includes('componentWillUpdate')\n      )\n    ) {\n      return;\n    }\n    originalWarn.call(console, ...args);\n  };\n});\n\nafterAll(() => {\n  console.error = originalError;\n  console.warn = originalWarn;\n});\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock,\n});\n\n// Mock sessionStorage\nconst sessionStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\nObject.defineProperty(window, 'sessionStorage', {\n  value: sessionStorageMock,\n});\n\n// Mock crypto API\nconst mockCrypto = {\n  randomUUID: jest.fn(() => 'mock-uuid-1234-5678-9012'),\n  getRandomValues: jest.fn((array: any) => {\n    for (let i = 0; i < array.length; i++) {\n      array[i] = Math.floor(Math.random() * 256);\n    }\n    return array;\n  }),\n};\nObject.defineProperty(window, 'crypto', {\n  value: mockCrypto,\n});\n\n// Mock performance API\nconst mockPerformance = {\n  now: jest.fn(() => Date.now()),\n  mark: jest.fn(),\n  measure: jest.fn(),\n  getEntriesByType: jest.fn(() => []),\n  getEntriesByName: jest.fn(() => []),\n  clearMarks: jest.fn(),\n  clearMeasures: jest.fn(),\n};\nObject.defineProperty(window, 'performance', {\n  value: mockPerformance,\n});\n\n// Mock URL constructor\nglobal.URL = class URL {\n  constructor(public href: string) {}\n  get hostname() {\n    return 'localhost';\n  }\n  get origin() {\n    return 'http://localhost:3003';\n  }\n  get pathname() {\n    return '/';\n  }\n  get search() {\n    return '';\n  }\n  get hash() {\n    return '';\n  }\n} as any;\n\n// Mock AbortSignal.timeout for API client tests\nif (!AbortSignal.timeout) {\n  AbortSignal.timeout = jest.fn((timeout: number) => {\n    const controller = new AbortController();\n    setTimeout(() => controller.abort(), timeout);\n    return controller.signal;\n  });\n}\n\n// Test utilities\nexport const testUtils = {\n  // Reset all mocks between tests\n  resetMocks: () => {\n    jest.clearAllMocks();\n    mockFetch.mockReset();\n    localStorageMock.getItem.mockReset();\n    localStorageMock.setItem.mockReset();\n    localStorageMock.removeItem.mockReset();\n    localStorageMock.clear.mockReset();\n    sessionStorageMock.getItem.mockReset();\n    sessionStorageMock.setItem.mockReset();\n    sessionStorageMock.removeItem.mockReset();\n    sessionStorageMock.clear.mockReset();\n  },\n\n  // Mock successful fetch response\n  mockFetchSuccess: (data: any, status = 200) => {\n    mockFetch.mockResolvedValueOnce({\n      ok: status >= 200 && status < 300,\n      status,\n      json: async () => data,\n      text: async () => JSON.stringify(data),\n      headers: new Headers({ 'content-type': 'application/json' }),\n    });\n  },\n\n  // Mock fetch error\n  mockFetchError: (error: string, status = 500) => {\n    mockFetch.mockRejectedValueOnce(new Error(error));\n  },\n\n  // Mock localStorage\n  mockLocalStorage: (items: Record<string, string> = {}) => {\n    localStorageMock.getItem.mockImplementation((key: string) => items[key] || null);\n    localStorageMock.setItem.mockImplementation((key: string, value: string) => {\n      items[key] = value;\n    });\n    localStorageMock.removeItem.mockImplementation((key: string) => {\n      delete items[key];\n    });\n    localStorageMock.clear.mockImplementation(() => {\n      Object.keys(items).forEach(key => delete items[key]);\n    });\n  },\n\n  // Wait for async operations\n  waitFor: (ms: number = 0) => new Promise(resolve => setTimeout(resolve, ms)),\n\n  // Create mock user data\n  createMockUser: (overrides = {}) => ({\n    id: 'user-123',\n    email: 'test@example.com',\n    name: 'Test User',\n    role: 'admin',\n    tenant_id: 'tenant-123',\n    permissions: ['read', 'write'],\n    last_login: new Date().toISOString(),\n    ...overrides,\n  }),\n\n  // Create mock tenant data\n  createMockTenant: (overrides = {}) => ({\n    id: 'tenant-123',\n    name: 'test-tenant',\n    display_name: 'Test Tenant',\n    slug: 'test-tenant',\n    status: 'active' as const,\n    tier: 'standard',\n    primary_color: '#3B82F6',\n    ...overrides,\n  }),\n\n  // Create mock API response\n  createMockApiResponse: (data: any, success = true) => ({\n    success,\n    data,\n    message: success ? 'Success' : 'Error',\n    ...(success ? {} : { error: 'Mock error' }),\n  }),\n};\n\n// Global test setup\nbeforeEach(() => {\n  testUtils.resetMocks();\n});\n\n// Add custom matchers\nexpect.extend({\n  toBeValidEmail(received: string) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const pass = emailRegex.test(received);\n    \n    if (pass) {\n      return {\n        message: () => `expected ${received} not to be a valid email`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () => `expected ${received} to be a valid email`,\n        pass: false,\n      };\n    }\n  },\n\n  toHaveValidationError(received: any, field: string) {\n    const hasError = received?.errors && received.errors[field];\n    \n    if (hasError) {\n      return {\n        message: () => `expected not to have validation error for field ${field}`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () => `expected to have validation error for field ${field}`,\n        pass: false,\n      };\n    }\n  },\n});"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","back","forward","refresh","usePathname","useSearchParams","URLSearchParams","__esModule","default","src","alt","props","React","createElement","children","href","testUtils","mockFetch","global","fetch","Object","defineProperty","window","writable","value","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","mockIntersectionObserver","mockReturnValue","observe","unobserve","disconnect","IntersectionObserver","mockResizeObserver","ResizeObserver","originalError","console","error","originalWarn","warn","beforeAll","args","includes","call","afterAll","localStorageMock","getItem","setItem","removeItem","clear","sessionStorageMock","mockCrypto","randomUUID","getRandomValues","array","i","length","Math","floor","random","mockPerformance","now","Date","mark","measure","getEntriesByType","getEntriesByName","clearMarks","clearMeasures","URL","constructor","hostname","origin","pathname","search","hash","AbortSignal","timeout","controller","AbortController","setTimeout","abort","signal","resetMocks","clearAllMocks","mockReset","mockFetchSuccess","data","status","mockResolvedValueOnce","ok","json","text","JSON","stringify","headers","Headers","mockFetchError","mockRejectedValueOnce","Error","mockLocalStorage","items","key","keys","forEach","waitFor","ms","Promise","resolve","createMockUser","overrides","id","email","name","role","tenant_id","permissions","last_login","toISOString","createMockTenant","display_name","slug","tier","primary_color","createMockApiResponse","success","message","beforeEach","expect","extend","toBeValidEmail","received","emailRegex","pass","test","toHaveValidationError","field","hasError","errors"],"mappings":"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"}