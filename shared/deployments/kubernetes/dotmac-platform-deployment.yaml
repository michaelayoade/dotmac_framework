apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotmac-platform
  namespace: dotmac-production
  labels:
    app: dotmac-platform
    version: v1.0.0
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: dotmac-platform
  template:
    metadata:
      labels:
        app: dotmac-platform
        version: v1.0.0
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: dotmac-platform
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: dotmac-platform
        image: dotmac/platform:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: dotmac-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: dotmac-secrets
              key: redis-url
        - name: AUTH_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: dotmac-secrets
              key: auth-secret-key
        - name: AUTH_INITIAL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dotmac-secrets
              key: initial-admin-password
        - name: AUTH_ADMIN_EMAIL
          valueFrom:
            configMapKeyRef:
              name: dotmac-config
              key: ADMIN_EMAIL
        envFrom:
        - configMapRef:
            name: dotmac-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      terminationGracePeriodSeconds: 45
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dotmac-platform
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: dotmac-platform-service
  namespace: dotmac-production
  labels:
    app: dotmac-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: dotmac-platform
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dotmac-platform
  namespace: dotmac-production
  labels:
    app: dotmac-platform
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dotmac-platform-pdb
  namespace: dotmac-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dotmac-platform
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dotmac-platform-hpa
  namespace: dotmac-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dotmac-platform
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
